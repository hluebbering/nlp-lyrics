[
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "References\n\n\n\nhttps://www.tensorflow.org/install https://huggingface.co/cardiffnlp/twitter-roberta-base-sentiment?text=I+like+you.+I+love+you https://aeturrell.github.io/coding-for-economists/vis-common-plots.html"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Natural Language Processing Song Lyrics",
    "section": "",
    "text": "The following project aims to extract and analyze insightful data about songs from a specified playlist on Spotify using the Spotify Web API. Subsequently, the lyricsgenius package allows for web scraping of the Genius Lyrics website to extract the lyrics for each song. Following extraction, the lyrics are thoroughly cleaned before undergoing sentiment analysis."
  },
  {
    "objectID": "index.html#extracting-spotify-data",
    "href": "index.html#extracting-spotify-data",
    "title": "Natural Language Processing Song Lyrics",
    "section": "Extracting Spotify Data",
    "text": "Extracting Spotify Data\nGetting started, we want to extract data for a set of tracks within one of Spotify’s top-featured playlists. Leveraging the Spotify Web API, we can seamlessly obtain detailed data for a song, such as the performing artist, the album it belongs to, its release date, popularity, and audio features like danceability, energy, and tempo.\nPython libraries like spotipy offer a user-friendly way to interact with the Spotify API, offering a range of functions that streamline tasks like API authentication, retrieving playlist data, and obtaining information about any given song.\n\nAccessing the Spotify Web API\nTo access data from Spotify, we import the spotipy library and the SpotifyClientCredentials module. Additionally, we utilize the pandas package for data manipulation and display. In order to authenticate our access to the Spotify API, we must provide our client ID and client secret to a client credentials manager. Once authenticated, we can use the spotipy module to interact with the Spotify API and retrieve data.\n\nimport spotipy\nfrom spotipy.oauth2 import SpotifyClientCredentials\nimport pandas as pd\n\nclient_id = \"xxx\"\nclient_secret = \"xxx\"\nmy_auth = SpotifyClientCredentials(client_id, client_secret)\nsp = spotipy.Spotify(auth_manager=my_auth)\n\n\nSpotify’s Featured Playlists\nLet’s take a look at the popular Spotify playlists. Below, the code retrieves a range of Spotify playlists and generates a dataframe containing details for each playlist, such as its name, ID, description, thumbnail, and total number of tracks. The resulting dataframe is displayed as an HTML table.\n\nusername = \"spotify\"\nmy_playlists = sp.user_playlists(username)\n\n\n\n\n\n\n\nthumbnail\nplaylist_name\nplaylist_id\ndescription\ntotal\n\n\n\n\n0\n\nToday's Top Hits\n37i9dQZF1DXcBWIGoYBM5M\nPeggy Gou is on top of the Hottest 50!\n50\n\n\n1\n\nRapCaviar\n37i9dQZF1DX0XUsuxWHRQd\nNew music from Quavo, Polo G and Lil Durk.\n50\n\n\n2\n\nHot Country\n37i9dQZF1DX1lVhptIYRda\nToday's top country hits. Cover: Warren Zeiders\n50\n\n\n\n\n\n\n\n\n\nExtracting Tracks From a Playlist\nThe following script enables the compilation of song and artist data from any Spotify playlist through its URI. To analyze a particular playlist, simply copy the URI from the Spotify Player interface and input it into the function defined below. The get_playlist_tracks method returns a complete list of track IDs and corresponding artists from the selected playlist.\n\ndef get_playlist_tracks(playlist_URI):\n    tracks = []\n    results = sp.playlist_tracks(playlist_URI)\n    tracks = results[\"items\"]\n    while results[\"next\"]:\n        results = sp.next(results)\n        tracks.extend(results[\"items\"])\n    return tracks\n\n\nExtracting Features from Tracks\nThe following script utilizes Spotify’s API to extract further details about each song within the playlist. It obtains metadata such as the track name, the artist it’s sung by, the album it belongs to, the release date, and track features such as danceability, tempo, and popularity.\n\n\nCode\n# Get playlist song features and artist info\ndef playlist_features(id, artist_id, playlist_id):\n    \n    # Create Spotify API client variables\n    meta = sp.track(id)\n    audio_features = sp.audio_features(id)\n    artist_info = sp.artist(artist_id)\n    playlist_info = sp.playlist(playlist_id)\n\n    # Metadata\n    name = meta['name']\n    track_id = meta['id']\n    album = meta['album']['name']\n    artist = meta['album']['artists'][0]['name']\n    artist_id = meta['album']['artists'][0]['id']\n    release_date = meta['album']['release_date']\n    length = meta['duration_ms']\n    popularity = meta['popularity']\n\n    # Main artist name, popularity, genre\n    artist_pop = artist_info[\"popularity\"]\n    artist_genres = artist_info[\"genres\"]\n\n    # Track features\n    acousticness = audio_features[0]['acousticness']\n    danceability = audio_features[0]['danceability']\n    energy = audio_features[0]['energy']\n    instrumentalness = audio_features[0]['instrumentalness']\n    liveness = audio_features[0]['liveness']\n    loudness = audio_features[0]['loudness']\n    speechiness = audio_features[0]['speechiness']\n    tempo = audio_features[0]['tempo']\n    valence = audio_features[0]['valence']\n    key = audio_features[0]['key']\n    mode = audio_features[0]['mode']\n    time_signature = audio_features[0]['time_signature']\n    \n    # Basic playlist info\n    playlist_name = playlist_info['name']\n\n    return [name, track_id, album, artist, artist_id, release_date, length, popularity, \n            artist_pop, artist_genres, acousticness, danceability, \n            energy, instrumentalness, liveness, loudness, speechiness, \n            tempo, valence, key, mode, time_signature, playlist_name]\n\n\n\nplaylist_URI = \"37i9dQZF1DXcBWIGoYBM5M\"  # Spotify playlist URI\nall_tracks = [  # Loop over track ids\n    playlist_features(i[\"track\"][\"id\"], i[\"track\"][\"artists\"][0][\"uri\"], playlist_URI)\n    for i in get_playlist_tracks(playlist_URI)\n]\n\nPutting it all together, the get_playlist_tracks function retrieves basic details for each song in a specified Spotify playlist using its URI. The playlist_features function then iterates through these tracks using their IDs to extract additional information, such as danceability, energy, loudness, speechiness, acousticness, instrumentalness, liveness, valence, tempo, and more. From there, we create a Pandas dataframe by passing in the extracted information.\n\n\n\n\n\n\n\n\n\nname\nartist\nrelease_date\npopularity\nartist_pop\nartist_genres\nacousticness\ndanceability\nenergy\ninstrumentalness\nliveness\nloudness\nspeechiness\ntempo\nvalence\nplaylist\n\n\n\n\n46\nCUFF IT\nBeyoncé\n2022-07-29\n88\n85\n[pop, r&b]\n0.0368\n0.780\n0.689\n0.000010\n0.0698\n-5.668\n0.1410\n115.042\n0.642\nToday's Top Hits\n\n\n47\nHere With Me\nd4vd\n2023-05-26\n91\n76\n[bedroom pop, bedroom r&b]\n0.5440\n0.571\n0.458\n0.000093\n0.1230\n-9.283\n0.0258\n132.025\n0.299\nToday's Top Hits\n\n\n48\nLast Night\nMorgan Wallen\n2023-01-31\n89\n87\n[contemporary country]\n0.4590\n0.517\n0.675\n0.000000\n0.1510\n-5.382\n0.0357\n203.853\n0.518\nToday's Top Hits\n\n\n49\nDial Drunk (with Post Malone)\nNoah Kahan\n2023-07-18\n87\n80\n[pov: indie]\n0.1210\n0.667\n0.613\n0.000000\n0.1130\n-7.147\n0.0313\n112.046\n0.681\nToday's Top Hits\n\n\n\n\n\n\n\n\n\n\nTop Artist Genres\nThe following code generates a dictionary that contains the frequency of artist genres, which is then converted into a dataframe sorted by tallying the number of occurrences of each genre The resulting dataframe exhibits the genres and the number of times they occur.\n\n\nCode\ngenres_dict = {}\nfor x in df.artist_genres:\n    for ii in x:\n        if ii in genres_dict:\n            genres_dict[ii] += 1\n        else:\n            genres_dict[ii] = 1\n\n# Convert Dictionary to Dataframe\ndf_genres = pd.DataFrame(genres_dict.items(), columns=['Genre', 'Freq']).sort_values('Freq', ascending=False)\ndf_genres = df_genres.reset_index(drop = True)"
  },
  {
    "objectID": "index.html#natural-language-processing",
    "href": "index.html#natural-language-processing",
    "title": "Natural Language Processing Song Lyrics",
    "section": "Natural Language Processing",
    "text": "Natural Language Processing\nUsing the data gathered from the Spotify API, we now want to extract and process the lyrics for each song. This is accomplished through scraping textual information, namely lyrical data, from the Genius Lyrics website. Following extraction, the lyrics are thoroughly processed and cleaned before undergoing sentiment analysis.\n\n\nScraping the Web\nTo get started, the script below imports lyricsgenius, a fundamental package libary allowing for web scraping of the Genius Lyrics website to retrieve the lyrics of any given song. Through the initialization of the genius variable, one can access the Genius API and retrieve the lyrics of any given song, such as “Too Many Nights” by Metro Boomin.\n\nimport lyricsgenius\n\ngenius = lyricsgenius.Genius(\"epFCxujgBe-Y6WrkZedI8kerKxiCpR6Rh0DAHYNlKDf9B4H1nXTdZIkj7krNUHVV\")\nsong = genius.search_song(\"Too Many Nights\", \"Metro Boomin\")\n\nSearching for \"Too Many Nights\" by Metro Boomin...\nDone.\n\n\n\nThe function provided below is designed to efficiently fetch the lyrics of a song using the given track name and artist. Once the lyrics are retrieved, the next step is to pre-process the textual data. This involves a cleansing process to eliminate profanity, specific characters, and patterns that may hinder the overall readability. The resulting output is a list of cleaned lyrics with all non-ASCII characters removed.\nFirst, we define a function that retrieves the lyrics for any song and artist from the Genius database. As shown below, it first searches for the track using the provided name and artist and then extracts the lyrics from the search results.\n\ndef get_song_lyrics(song_name, song_artist):\n    song_genius = genius.search_song(song_name, song_artist)\n    song_lyrics = song_genius.lyrics.partition(\"Lyrics\")[2]\n    # Remove any numbers followed by 'Embed'\n    song_lyrics = re.sub(r\"[\\[].*?[\\]]|\\d+Embed\", \"\", song_lyrics)\n    # Remove text between square brackets\n    song_lyrics = re.sub(r\"(\\-[A-Za-z]+\\-)\", \"\", song_lyrics)\n\n    return song_lyrics\n\n\n\nPre-Processing Text Data\nThe following Python script contains various functions optimized for efficiently cleaning song lyrics, which is a crucial step towards building a sentiment classifier. The text pre-processing procedure involves the following main steps.\n\nLanguage Detection\nExpanding Contractions\nConverting Text to Lowercase\nSpell Checking + Censoring\nRemoving Punctuations\nTokenization\n\nThe function detect_and_translate below is designed to identify and translate text into a specified language, specifically English. It first checks the language of the original text and compares it to the target language. If the detected language differs from the target language, the function utilizes GoogleTranslator to translate the input text into the target language (English).\n\nfrom deep_translator import GoogleTranslator\nfrom langdetect import detect\n\n\n# Function to detect and translate text\ndef detect_and_translate(track_lyrics, target_lang):\n    result_lang = detect(track_lyrics)\n    if result_lang == target_lang:\n        return track_lyrics\n    # translate_text\n    translator = GoogleTranslator(source=\"auto\", target=\"en\")\n    return translator.translate(track_lyrics)\n\nWe also develop various functions to support the preprocessing of textual data, streamlining the process and improving the accuracy of the final output. Among these functions are a method for removing punctuation from a given string of lyrics and a spell-checker that automatically finds and corrects any spelling errors.\n\n\nCode\ndef remove_punctuation(clean_lyrics_str):\n    punctuations = string.punctuation  # define punctuation\n    no_punct = \"\"\n    for char in clean_lyrics_str:\n        if char not in punctuations:\n            no_punct = no_punct + char\n    return no_punct  # return unpunctuated string\n\n\nAs follows, the clean_song_lyrics function is specifically designed to process textual lyrics for a particular song and artist. The process begins by retrieving the lyrics from the Genius database and translating them into English if needed. The next step involves expanding contractions, removing redundant expressions like “lala” or “nanana”, and converting the lyrics to lowercase. Next, it performs a spell check to correct any spelling errors, censors any profanity language, and removes all punctuation. Once the processing is complete, the function tokenizes and encodes the cleaned text, returning the decoded lyrics as a list of words. The result is a beautifully processed set of lyrics, tokenized and decoded as a list of words.\n\ndef clean_song_lyrics(song_name, artist_name):\n1    genius_lyrics = get_song_lyrics(song_name, artist_name)\n2    lyrics_en = detect_and_translate(genius_lyrics, \"en\")\n    \n3    no_contract = [contractions.fix(word) for word in lyrics_en.split()]\n4    no_contract_str = \" \".join(no_contract).lower()  # lowercase\n    no_contract_str = re.sub(r\"nana|lala\", \"\", no_contract_str)\n    \n    corrected = spell_check(no_contract_str) # &lt;5&gt; # Spell Check + Censor\n5    censored = profanity.censor(\" \".join(corrected), censor_char=\"\")\n    no_punct = remove_punctuation(censored) # &lt;6&gt; # Remove Punctuation\n    \n7    tokenized = word_tokenize(no_punct)  # Tokenize\n8    strencode = [i.encode(\"ascii\", \"ignore\") for i in tokenized]  # Encode() method\n    return [i.decode() for i in strencode]  # Decode() method\n\n\n1\n\nGather lyrics from the Genius database\n\n2\n\nTranslate the lyrics into English if needed\n\n3\n\nExpand contractions\n\n4\n\nConvert to lowercase and remove redundant expressions like “lala” or “nanana”\n\n5\n\nPerform a spell check and censor any profanity language\n\n7\n\nTokenize each word\n\n8\n\nEncode the cleaned text, returning the decoded lyrics as a list of words\n\n\n\n\nThe result is a beautifully processed set of lyrics, tokenized and decoded as a list of words.\n\nRemoving Stop Words\nThe code below aims to eliminate stopwords from lyrics utilizing the Natural Language Toolkit (NLTK) library and its WordNetLemmatizer tool. The removal of stopwords is particularly beneficial in natural language processing tasks, such as sentiment analysis or topic modeling. By eliminating frequently occurring words like “the,” “and,” or “of,” the resulting text becomes more compact and meaningful. Without the distraction of stopwords, the analysis can more effectively capture the essence of the lyrics and the underlying conveyed message. This process allows researchers and developers to gain valuable insights and draw accurate conclusions from textual data. Whether it is exploring song lyrics, analyzing customer reviews, or studying social media trends, removing stopwords enhances the quality of text analysis and facilitates more efficient information extraction.\n\nfrom nltk.corpus import stopwords\nfrom nltk.stem import WordNetLemmatizer\n\n\ndef remove_stopwords_lyrics(clean_lyrics_decode):\n    stopword = stopwords.words(\"english\")\n    stopword.extend([\"yeah\", \"nanana\", \"nana\", \"oh\", \"la\"])\n    return [word for word in clean_lyrics_decode if word not in stopword]\n\n\n\nLemmatization\nNext, we define a function to perform lemmatization on a set of words using the WordNetLemmatizer class from the NLTK library. Lemmatization is a crucial step in natural language processing and text analysis, helping to standardize words and reduce their complexity. By reducing words to their root or base form, lemmatization enables more accurate analysis and comparisons. Our function specifically targets verbs and transforms different variations of the same verb into its most basic form.\n\n\nCode\nfrom nltk.corpus import stopwords, wordnet\n\ndef get_wordnet_pos(tag):\n    if tag.startswith(\"J\"):\n        return wordnet.ADJ\n    elif tag.startswith(\"V\"):\n        return wordnet.VERB\n    elif tag.startswith(\"N\"):\n        return wordnet.NOUN\n    elif tag.startswith(\"R\"):\n        return wordnet.ADV\n    else:\n        return wordnet.NOUN\n\n\nFirst, the following script determines the part of speech (i.e., noun, verb, adverb, etc.) for each word in the provided lyrics and assigns an appropriate tag. Then, we write a function, as shown above, that converts the parts of speech tag to WordNet’s format. With this function, we apply the conversion within a list comprehension setup. Finally, we apply the NLTK’s word lemmatizer to each word.\n\nfrom nltk.tag import pos_tag\nfrom nltk import pos_tag\n\ndef word_lemmatize(lyrics_cleaned):  # clean_lyrics_decode):\n    pos_tags = pos_tag(lyrics_cleaned)\n    wordnet_pos = [(word, get_wordnet_pos(pos_tag)) for (word, pos_tag) in pos_tags]\n\n    wnl = WordNetLemmatizer()  # Lemmatize Lyrics\n    # return [wnl.lemmatize(word, \"v\") for word in clean_lyrics_decode]\n    return [wnl.lemmatize(word, tag) for word, tag in wordnet_pos]\n\nIn summary, the code above defines a function that makes use of the WordNetLemmatizer class from the NLTK library to conduct lemmatization specifically targeting verbs, thereby converting words to their most basic form.\n\n\nExploratory text analysis\nBelow is a code snippet that iterates through the “all_tracks” dataset, extracting each track name and the corresponding artist. We then apply our pre-defined functions to clean the lyrics, remove stopwords, and perform lemmatization for each song. Specifically, we execute the clean_song_lyrics() function, passing in the extracted song name and artist name. We then proceed to call the remove_stopwords_lyrics() and word_lemmatize() functions, both of which take in the cleaned lyrics string from the previous step as input.\n\n\n\n\n\n\n\n\n\ntrack\nartist\nlyrics\nstopwords removed\nlemmatized words\n\n\n\n\n0\n(It Goes Like) Nanana\nPeggy Gou\n[i, can, not, explain, i, got, a, feeling, tha...\n[explain, got, feeling, erase, feeling, leave,...\n[explain, get, feeling, erase, feeling, leave,...\n\n\n1\nBarbie World\nNicki Minaj\n[i, am, always, yours, ooh, woah, stop, playin...\n[always, ooh, woah, stop, playing, riot, bad, ...\n[always, ooh, woah, stop, play, riot, bad, lik...\n\n\n2\nPaint The Town Red\nDoja Cat\n[by, walk, on, by, walk, on, by, walk, on, by,...\n[walk, walk, walk, walk, said, said, would, ra...\n[walk, walk, walk, walk, say, say, would, rath...\n\n\n3\nSeven\nJung Kook\n[weight, of, the, world, on, your, shoulders, ...\n[weight, world, shoulders, kiss, waist, ease, ...\n[weight, world, shoulder, kiss, waist, ease, m...\n\n\n4\nbad idea right?\nOlivia Rodrigo\n[hey, have, not, heard, from, you, in, a, coup...\n[hey, heard, couple, months, right, calling, p...\n[hey, hear, couple, month, right, call, phone,...\n\n\n\n\n\n\n\n\nTerm Frequency Analysis\nLet’s examine the most frequent words. NLTK offers a powerful library called “FreqDist” that helps us determine the occurrence of the most common terms in our corpus. Initially, we must transform our individual lists of tokenized lyrics into a comprehensive list of iterable tokens that encompasses all the lyrics collectively.\n\nfrom nltk.probability import FreqDist\n\nwords = df_lyrics['lemmatized words']\n#words = df_lyrics['stopwords removed']\n# words = df_lyrics['lyrics']\n\nallwords = []\nfor wordlist in words:\n    allwords += wordlist\nprint(allwords)\nmostcommon = FreqDist(allwords).most_common(35)\n\n['explain', 'get', 'feeling', 'erase', 'feeling', 'leave', 'behind', 'something', 'mind', 'guess', 'go', 'like', 'na', 'na', 'na', 'na', 'na', 'na', 'na', 'na', 'explain', 'get', 'feeling', 'erase', 'feeling', 'leave', 'behind', 'something', 'mind', 'guess', 'go', 'like', 'na', 'na', 'na', 'na', 'na', 'na', 'na', 'na', 'see', 'peggy', 'liege', 'ticket', 'low', '191you', 'might', 'also', 'like', 'explain', 'get', 'feeling', 'erase', 'feeling', 'leave', 'behind', 'something', 'mind', 'guess', 'go', 'like', 'na', 'na', 'na', 'na', 'na', 'na', 'na', 'na', 'explain', 'get', 'feeling', 'erase', 'feeling', 'leave', 'behind', 'something', 'mind', 'guess', 'go', 'like', 'na', 'na', 'na', 'na', 'na', 'na', 'na', 'na', 'always', 'ooh', 'woah', 'stop', 'play', 'riot', 'bad', 'like', 'barbie', 'barbie', 'doll', 'still', 'want', 'party', 'party', 'pink', 'yvette', 'like', 'ready', 'bend', 'bend', 'ten', 'pull', 'ken', 'like', 'jazzed', 'stack', 'nicki', 'grrah', 'barbies', 'pretty', 'barbies', 'bad', 'girl', 'girl', 'play', 'tag', 'grrah', 'rad', 'spank', 'get', 'bad', 'law', 'rodeo', 'drive', 'new', 'york', 'madison', 'ave', 'barbie', 'girl', 'girl', 'pink', 'barbie', 'dreamhouse', 'way', 'ken', 'kill', 'get', 'yell', 'like', 'scream', 'house', 'wood', 'yell', 'sell', 'get', 'money', 'lending', 'get', 'bar', 'bail', 'pink', 'ferrari', 'peel', 'tell', 'tae', 'bring', 'bob', 'dylan', 'cold', 'chill', 'yell', 'yell', 'yeyellin', 'barbie', 'still', 'doubt', 'might', 'also', 'like', 'bad', 'like', 'barbie', 'barbie', 'doll', 'still', 'want', 'party', 'party', 'pink', 'yvette', 'like', 'ready', 'bend', 'bend', 'ten', 'pull', 'ken', 'like', 'jazzed', 'stack', 'nicki', 'grrah', 'barbies', 'pretty', 'barbies', 'bad', 'girl', 'girl', 'play', 'tag', 'grrah', 'barbie', 'nothing', 'play', 'want', 'play', 'playhouse', 'playhouse', 'go', 'say', 'grrah', 'wash', 'rub', 'stain', 'like', 'ready', 'bend', 'grrah', 'fake', 'barbies', 'want', 'pretend', 'like', 'hold', 'let', 'go', 'find', 'pen', 'grrah', 'look', 'lead', 'put', 'bed', 'barbie', 'barbie', 'clique', 'grrah', 'keep', 'drag', 'bald', 'bit', 'see', 'bread', 'want', 'want', 'green', 'olive', 'grrah', 'throw', 'back', 'lose', 'like', 'give', 'box', 'shoe', 'know', 'trick', 'get', 'bricked', 'know', 'lit', 'barbie', 'bad', 'like', 'barbie', 'barbie', 'doll', 'still', 'want', 'party', 'party', 'pink', 'yvette', 'like', 'ready', 'bend', 'bend', 'ten', 'pull', 'ken', 'like', 'jazzed', 'stack', 'nicki', 'grrah', 'barbies', 'pretty', 'barbies', 'bad', 'girl', 'girl', 'play', 'tag', 'grrah', 'barbie', 'girl', 'barbie', 'world', 'life', 'plastic', 'fantastic', 'brush', 'hair', 'undress', 'everywhere', 'imagination', 'life', 'creation', 'walk', 'walk', 'walk', 'walk', 'say', 'say', 'would', 'rather', 'famous', 'instead', 'let', 'get', 'head', 'care', 'paint', 'town', 'red', 'say', 'say', 'would', 'rather', 'famous', 'instead', 'let', 'get', 'head', 'care', 'paint', 'town', 'red', 'mme', 'devil', 'bad', 'lily', 'rebel', 'put', 'foot', 'pedal', 'take', 'whole', 'lot', 'settle', 'mme', 'devil', 'bad', 'lily', 'rebel', 'put', 'foot', 'pedal', 'take', 'whole', 'lot', 'settle', 'see', 'deja', 'cat', 'liege', 'ticket', 'low', '28you', 'might', 'also', 'like', 'say', 'happiness', 'misery', 'put', 'good', 'kidney', 'margie', 'come', 'jealousy', 'illness', 'come', 'remedy', 'much', 'fun', 'without', 'hennessy', 'want', 'love', 'energy', 'talk', 'without', 'penalty', 'send', 'go', 'glow', 'one', 'time', 'trust', 'magical', 'foresight', 'go', 'see', 'sleep', 'courtside', 'go', 'see', 'eat', 'ten', 'time', 'ugh', 'take', 'nowhere', 'ugh', 'look', 'well', 'hair', 'ugh', 'sign', 'smoke', 'ugh', 'give', 'chance', 'go', 'say', 'say', 'would', 'rather', 'famous', 'instead', 'let', 'get', 'head', 'care', 'paint', 'town', 'red', 'say', 'say', 'would', 'rather', 'famous', 'instead', 'let', 'get', 'head', 'care', 'paint', 'town', 'red', 'mme', 'devil', 'bad', 'lily', 'rebel', 'put', 'foot', 'pedal', 'take', 'whole', 'lot', 'settle', 'mme', 'devil', 'bad', 'lily', 'rebel', 'put', 'foot', 'pedal', 'take', 'whole', 'lot', 'settle', 'say', 'pop', 'make', 'money', 'try', 'could', 'use', 'revamp', 'new', 'vibe', 'si', 'need', 'big', 'feature', 'new', 'sidekick', 'need', 'new', 'fan', 'boo', 'like', 'need', 'wear', 'wig', 'make', 'like', 'twotime', 'knew', 'would', 'win', 'throw', 'shot', 'like', 'tryna', 'food', 'fight', 'pop', 'wait', 'bet', 'say', 'get', 'drive', 'need', 'car', 'money', 'really', 'fiending', 'thing', 'see', 'fan', 'dumb', 'extremist', 'demon', 'lord', 'fall', 'see', 'horse', 'call', 'bluff', 'well', 'cite', 'source', 'fame', 'something', 'need', 'say', 'say', 'would', 'rather', 'famous', 'instead', 'let', 'get', 'head', 'care', 'paint', 'town', 'red', 'say', 'say', 'would', 'rather', 'famous', 'instead', 'let', 'get', 'head', 'care', 'paint', 'town', 'red', 'mme', 'devil', 'bad', 'lily', 'rebel', 'put', 'foot', 'pedal', 'take', 'whole', 'lot', 'settle', 'mme', 'devil', 'bad', 'lily', 'rebel', 'put', 'foot', 'pedal', 'take', 'whole', 'lot', 'settle', 'walk', 'walk', 'walk', 'walk', 'walk', 'weight', 'world', 'shoulder', 'kiss', 'waist', 'ease', 'mind', 'must', 'favor', 'know', 'ya', 'take', 'hand', 'trace', 'line', 'way', 'ride', 'way', 'ride', 'ohohoh', 'think', 'meet', 'another', 'life', 'break', 'another', 'time', 'ohohoh', 'wrap', 'around', 'give', 'life', 'night', 'night', 'love', 'right', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', 'week', 'monday', 'tuesdays', 'wednesday', 'thursday', 'friday', 'seven', 'day', 'week', 'every', 'hour', 'every', 'minute', 'every', 'second', 'know', 'night', 'night', 'love', 'right', 'seven', 'day', 'week', 'love', 'jump', 'right', 'offering', 'show', 'devotion', 'deeper', 'ocean', 'wind', 'back', 'take', 'slow', 'leave', 'afterglow', 'show', 'devotion', 'deeper', 'ocean', 'might', 'also', 'like', 'way', 'ride', 'way', 'ride', 'ohohoh', 'think', 'meet', 'another', 'life', 'break', 'another', 'time', 'ohohoh', 'wrap', 'around', 'give', 'life', 'night', 'night', 'love', 'right', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', 'week', 'monday', 'tuesdays', 'wednesday', 'thursday', 'friday', 'seven', 'day', 'week', 'every', 'hour', 'every', 'minute', 'every', 'second', 'know', 'night', 'night', 'love', 'right', 'love', 'right', 'seven', 'day', 'week', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', 'week', 'monday', 'tuesdays', 'wednesday', 'thursday', 'friday', 'seven', 'day', 'week', 'seven', 'day', 'week', 'every', 'hour', 'every', 'minute', 'every', 'second', 'know', 'night', 'night', 'night', 'night', 'love', 'right', 'love', 'right', 'seven', 'day', 'week', 'big', 'tattoo', 'tightly', 'take', 'control', 'tightly', 'take', 'soul', 'take', 'phone', 'put', 'camera', 'roll', 'uh', 'leave', 'clothes', 'door', 'wait', 'well', 'come', 'hit', 'ya', 'goal', 'jump', 'foot', 'go', 'sunup', 'get', 'sleep', 'seven', 'day', 'week', 'seven', 'different', 'sheet', 'seven', 'different', 'angle', 'fantasy', 'open', 'say', 'ah', 'come', 'baby', 'let', 'swallow', 'pride', 'match', 'vibe', 'hit', 'cha', 'cha', 'slide', 'make', 'monday', 'feel', 'like', 'weekend', 'make', 'never', 'think', 'cheat', 'get', 'skip', 'work', 'meeting', 'let', 'u', 'sleep', 'seven', 'day', 'week', 'ooh', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', 'week', 'monday', 'tuesdays', 'wednesday', 'thursday', 'friday', 'seven', 'day', 'week', 'every', 'hour', 'every', 'minute', 'every', 'second', 'ohoh', 'know', 'night', 'night', 'love', 'right', 'seven', 'day', 'week', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', 'week', 'monday', 'tuesdays', 'wednesday', 'thursday', 'friday', 'ooh', 'ooh', 'ooh', 'ooh', 'ooh', 'seven', 'day', 'week', 'every', 'hour', 'every', 'minute', 'every', 'second', 'hour', 'minute', 'second', 'know', 'night', 'night', 'love', 'right', 'seven', 'day', 'week', 'hey', 'hear', 'couple', 'month', 'right', 'call', 'phone', 'alone', 'sense', 'undertone', 'right', 'friend', 'send', 'new', 'address', 'know', 'do', 'know', 'look', 'brain', 'go', 'ah', 'hear', 'thought', 'hear', 'thought', 'like', 'blahblah', 'blah', 'blah', 'blah', 'blah', 'blah', 'blah', 'probably', 'probably', 'probably', 'probably', 'probably', 'see', 'tonight', 'bad', 'idea', 'right', 'see', 'tonight', 'bad', 'idea', 'right', 'see', 'tonight', 'bad', 'idea', 'right', 'see', 'tonight', 'fine', 'might', 'also', 'like', 'yes', 'know', 'ex', 'two', 'people', 'reconnect', 'see', 'friend', 'big', 'lie', 'ever', 'say', 'yes', 'know', 'ex', 'two', 'people', 'reconnect', 'see', 'friend', 'trip', 'fell', 'bed', 'get', 'care', 'wreck', 'plan', 'know', 'stop', 'told', 'friend', 'asleep', 'never', 'say', 'whose', 'sheet', 'pull', 'place', 'second', 'floor', 'stand', 'smile', 'door', 'sure', 'see', 'much', 'hot', 'men', 'really', 'remember', 'brain', 'go', 'ah', 'hear', 'thought', 'hear', 'thought', 'like', 'blahblah', 'blah', 'blah', 'blah', 'blah', 'blah', 'blah', 'probably', 'probably', 'probably', 'probably', 'probably', 'see', 'tonight', 'bad', 'idea', 'right', 'see', 'tonight', 'bad', 'idea', 'right', 'see', 'tonight', 'bad', 'idea', 'right', 'see', 'tonight', 'fine', 'yes', 'know', 'ex', 'two', 'people', 'reconnect', 'see', 'friend', 'big', 'lie', 'ever', 'say', 'yes', 'know', 'ex', 'two', 'people', 'reconnect', 'see', 'friend', 'trip', 'fell', 'bed', 'yes', 'know', 'ex', 'two', 'people', 'reconnect', 'big', 'lie', 'ever', 'say', 'trip', 'fell', 'bed', 'brain', 'go', 'ah', 'hear', 'thought', 'big', 'lie', 'ever', 'say', 'brain', 'go', 'ah', 'hear', 'thought', 'trip', 'fell', 'bed', 'thought', 'blah', 'thought', 'blah', 'fever', 'dream', 'high', 'quiet', 'night', 'know', 'catch', 'right', 'want', 'bad', 'bad', 'boy', 'shiny', 'toy', 'price', 'know', 'buy', 'right', 'want', 'kill', 'slow', 'window', 'always', 'wait', 'wait', 'devil', 'roll', 'dice', 'angel', 'roll', 'eye', 'make', 'want', 'new', 'shape', 'body', 'blue', 'feeling', 'get', 'ooh', 'woahoh', 'cruel', 'summer', 'cool', 'tell', 'rule', 'breakable', 'heaven', 'ooh', 'woahoh', 'cruel', 'summer', 'hang', 'head', 'low', 'glow', 'vending', 'machine', 'die', 'right', 'want', 'say', 'try', 'time', 'try', 'right', 'want', 'see', 'taylor', 'swift', 'liege', 'ticket', 'low', '110you', 'might', 'also', 'like', 'cut', 'headlight', 'summer', 'knife', 'always', 'wait', 'cut', 'bone', 'devil', 'roll', 'dice', 'angel', 'roll', 'eye', 'bleed', 'last', 'know', 'new', 'shape', 'body', 'blue', 'feeling', 'get', 'ooh', 'woahoh', 'cruel', 'summer', 'cool', 'tell', 'rule', 'breakable', 'heaven', 'ooh', 'woahoh', 'cruel', 'summer', 'back', 'car', 'cry', 'like', 'baby', 'come', 'home', 'bar', 'say', 'fine', 'true', 'want', 'keep', 'secret', 'keep', 'snuck', 'garden', 'gate', 'every', 'night', 'summer', 'seal', 'fate', 'scream', 'whatever', 'worth', 'love', 'bad', 'thing', 'ever', 'hear', 'look', 'grin', 'like', 'devil', 'new', 'shape', 'body', 'blue', 'feeling', 'get', 'ooh', 'woahoh', 'cruel', 'summer', 'cool', 'tell', 'rule', 'breakable', 'heaven', 'ooh', 'woahoh', 'cruel', 'summer', 'back', 'car', 'cry', 'like', 'baby', 'come', 'home', 'bar', 'say', 'fine', 'true', 'want', 'keep', 'secret', 'keep', 'snuck', 'garden', 'gate', 'every', 'night', 'summer', 'seal', 'fate', 'scream', 'whatever', 'worth', 'love', 'bad', 'thing', 'ever', 'hear', 'baby', 'find', 'lights', 'diamond', 'eye', 'turn', 'rhythm', 'want', 'come', 'along', 'ride', 'ooh', 'outfit', 'tight', 'see', 'heartbeat', 'tonight', 'take', 'heat', 'baby', 'best', 'believe', 'moment', 'shine', 'every', 'romance', 'shake', 'bend', 'give', 'night', 'tear', 'baby', 'chance', 'could', 'dance', 'could', 'dance', 'could', 'dance', 'watch', 'dance', 'dance', 'night', 'away', 'heart', 'could', 'burn', 'see', 'face', 'watch', 'dance', 'dance', 'night', 'away', 'uhhuh', 'still', 'keep', 'party', 'run', 'one', 'hair', 'place', 'lately', 'move', 'close', 'edge', 'still', 'look', 'best', 'stay', 'beat', 'count', 'miss', 'step', 'might', 'also', 'like', 'every', 'romance', 'shake', 'bend', 'give', 'night', 'tear', 'baby', 'chance', 'could', 'dance', 'could', 'dance', 'could', 'dance', 'watch', 'dance', 'dance', 'night', 'away', 'heart', 'could', 'burn', 'see', 'face', 'watch', 'dance', 'dance', 'night', 'away', 'uhhuh', 'still', 'keep', 'party', 'run', 'one', 'hair', 'place', 'heart', 'break', 'never', 'see', 'never', 'see', 'world', 'shake', 'feel', 'alive', 'feel', 'alive', 'play', 'safe', 'ooh', 'know', 'uhhuh', 'could', 'dance', 'could', 'dance', 'could', 'dance', 'even', 'tear', 'flow', 'diamond', 'face', 'still', 'keep', 'party', 'go', 'one', 'hair', 'place', 'eye', 'even', 'tear', 'flow', 'diamond', 'face', 'eye', 'yes', 'still', 'keep', 'party', 'go', 'one', 'hair', 'place', 'watch', 'dance', 'dance', 'night', 'away', 'uhhuh', 'heart', 'could', 'burn', 'see', 'face', 'watch', 'dance', 'dance', 'dance', 'night', 'away', 'uhhuh', 'still', 'keep', 'party', 'run', 'one', 'hair', 'place', 'heart', 'break', 'never', 'see', 'never', 'see', 'world', 'shake', 'feel', 'alive', 'feel', 'alive', 'play', 'safe', 'know', 'uhhuh', 'could', 'dance', 'could', 'dance', 'could', 'dance', 'dance', 'night', 'use', 'float', 'fall', 'use', 'know', 'sure', 'make', 'make', 'take', 'drive', 'ideal', 'look', 'alive', 'turn', 'real', 'something', 'pay', 'make', 'know', 'feel', 'want', 'try', 'know', 'feel', 'someday', 'might', 'someday', 'might', 'mme', 'mme', 'ah', 'mme', 'mme', 'end', 'enjoyment', 'sad', 'tell', 'boyfriend', 'make', 'make', 'see', 'billie', 'finish', 'liege', 'ticket', 'low', '102you', 'might', 'also', 'like', 'know', 'feel', 'want', 'try', 'know', 'feel', 'someday', 'might', 'someday', 'might', 'think', 'forgot', 'happy', 'something', 'something', 'something', 'wait', 'something', 'make', 'something', 'make', 'see', 'devil', 'sunset', 'every', 'place', 'every', 'face', 'uh', 'uh', 'uh', 'uh', 'tell', 'see', 'uh', 'live', 'life', 'uh', 'even', 'act', 'like', 'want', 'limelight', 'uh', 'uh', 'uh', 'know', 'yeahyeah', 'uh', 'life', 'lie', 'call', 'paparazzi', 'act', 'surprise', 'ohohoh', 'know', 'need', 'ohoh', 'uh', 'want', 'fame', 'know', 'fiends', 'ohoh', 'uh', 'give', 'little', 'taste', 'run', 'back', 'ohoh', 'uh', 'put', 'vein', 'pray', 'soul', 'keep', 'ooooh', 'oohooh', 'every', 'night', 'every', 'night', 'uh', 'pray', 'sky', 'flash', 'light', 'ever', 'want', 'see', 'beg', 'knee', 'popular', 'dream', 'popular', 'anyone', 'popular', 'uhm', 'sell', 'soul', 'popular', 'popular', 'popular', 'uhhuh', 'everybody', 'scream', 'popular', 'mainstream', 'popular', 'never', 'free', 'popular', 'might', 'also', 'like', 'money', 'top', 'money', 'top', 'uhhuh', 'money', 'top', 'money', 'top', 'uhhuh', 'shawty', 'know', 'popular', 'uhhuh', 'shawty', 'know', 'popular', 'know', 'see', 'huh', 'time', 'go', 'uh', 'uh', 'spend', 'whole', 'life', 'run', 'flash', 'light', 'try', 'uh', 'alright', 'uh', 'take', 'soul', 'without', 'fight', 'uh', 'ohohoh', 'know', 'need', 'ohoh', 'uh', 'want', 'fame', 'know', 'fiends', 'ohoh', 'uh', 'give', 'little', 'taste', 'run', 'back', 'ohoh', 'uh', 'put', 'vein', 'pray', 'soul', 'keep', 'ooooh', 'uh', 'oohooh', 'every', 'night', 'every', 'night', 'pray', 'sky', 'flash', 'light', 'ever', 'want', 'see', 'beg', 'knee', 'popular', 'huh', 'dream', 'popular', 'anyone', 'popular', 'uhm', 'sell', 'soul', 'popular', 'popular', 'popular', 'uhhuh', 'everybody', 'scream', 'popular', 'mainstream', 'popular', 'never', 'free', 'popular', 'money', 'top', 'money', 'top', 'uhhuh', 'money', 'top', 'money', 'top', 'uhhuh', 'shawty', 'know', 'popular', 'uh', 'shawty', 'know', 'popular', 'uh', 'money', 'top', 'money', 'top', 'uhhuh', 'money', 'top', 'money', 'top', 'uhhuh', 'shawty', 'know', 'popular', 'uhhuh', 'shawty', 'know', 'popular', 'get', 'money', 'keep', 'get', 'cash', 'keep', 'money', 'top', 'money', 'top', 'shawty', 'know', 'popular', 'poppopular', 'bear', 'popular', 'debt', 'twenty', 'mill', 'run', 'never', 'break', 'popular', 'turn', 'webcam', 'follower', 'hahahahaha', 'beg', 'knee', 'popular', 'dream', 'popular', 'anyone', 'popular', 'uhm', 'sell', 'soul', 'popular', 'popular', 'popular', 'uhhuh', 'everybody', 'scream', 'popular', 'mainstream', 'popular', 'never', 'free', 'popular', 'super', 'shy', 'super', 'shy', 'wait', 'minute', 'make', 'mine', 'make', 'mine', '', '', 'mind', 'time', 'want', 'tell', 'super', 'shy', 'super', 'shy', 'super', 'shy', 'super', 'shy', 'wait', 'minute', 'make', 'mine', 'make', 'mine', '', '', 'mind', 'time', 'want', 'tell', 'super', 'shy', 'super', 'shy', 'want', 'go', 'want', 'get', 'huh', 'find', 'lil', 'spot', 'sit', 'talk', 'look', 'pretty', 'follow', '', '', '', 'heh', '', '', 'say', 'dream', 'even', 'know', 'name', 'ya', 'even', 'know', 'name', 'ya', '', 'might', 'also', 'like', 'super', 'shy', 'super', 'shy', 'wait', 'minute', 'make', 'mind', 'make', 'mine', '', '', 'mind', 'time', 'want', 'tell', 'super', 'shy', 'super', 'shy', 'super', 'shy', 'super', 'shy', 'wait', 'minute', 'make', 'mine', 'make', 'mine', '', '', 'mind', 'time', 'want', 'tell', 'super', 'shy', 'super', 'shy', '', '', '', 'like', 'something', 'odd', 'special', 'know', 'top', 'babe', 'super', 'shy', 'super', 'shy', 'wait', 'minute', 'make', 'mine', 'make', 'mine', '', '', 'mind', 'time', 'want', 'tell', 'super', 'shy', 'super', 'shy', 'super', 'shy', 'super', 'shy', 'wait', 'minute', 'make', 'mine', 'make', 'mine', '', '', 'mind', 'time', 'want', 'tell', 'super', 'shy', 'super', 'shy', 'even', 'know', 'name', 'ya', 'even', 'know', 'name', 'ya', '', 'even', 'know', 'name', 'ya', 'super', 'shy', 'super', 'shy', 'make', 'mine', 'make', 'mine', 'even', 'know', 'name', 'ya', 'mind', 'time', 'want', 'tell', 'super', 'shy', 'super', 'shy', 'ooh', 'dunk', 'rock', 'mean', 'young', 'gunna', 'wan', 'na', 'back', 'call', 'splurge', 'watch', 'jump', 'right', 'curb', 'bentley', 'spur', 'fly', 'like', 'bird', 'spin', 'first', 'third', 'solid', 'keep', 'word', 'equal', 'know', 'heard', 'crank', 'foreign', 'swerve', 'keep', 'stick', 'purge', 'ha', 'ha', 'mean', 'young', 'gunna', 'wan', 'na', 'work', 'nerve', 'pour', 'syrup', 'like', 'perv', 'smack', 'back', 'grab', 'perm', 'ice', 'berg', 'uh', 'lily', 'turd', 'take', 'wait', 'turn', 'lane', 'merge', 'hand', 'learn', 'let', 'u', 'see', 'much', 'earn', 'watch', 'go', 'big', 'like', 'worm', 'smoke', 'city', 'qpski', 'pretty', 'show', 'ceiling', 'let', 'run', 'million', 'rock', 'really', 'let', 'u', 'billion', 'get', 'gritty', 'city', 'home', 'villain', 'ecstasy', 'wonderful', 'feel', 'smoke', 'pound', 'chill', 'trap', 'make', 'kill', 'look', 'get', 'everybody', 'wish', 'hope', 'play', 'position', 'want', 'nobody', 'listen', 'see', 'ho', 'precision', 'get', 'rich', 'decision', 'see', 'gunna', 'liege', 'ticket', 'low', '54you', 'might', 'also', 'like', 'mean', 'young', 'gunna', 'wan', 'na', 'back', 'call', 'splurge', 'watch', 'jump', 'right', 'curb', 'bentley', 'spur', 'fly', 'like', 'bird', 'spin', 'first', 'third', 'solid', 'keep', 'word', 'equal', 'know', 'heard', 'crank', 'foreign', 'swerve', 'keep', 'stick', 'purge', 'mean', 'mean', 'laila', 'full', 'harmony', 'laila', 'laila', 'everything', 'fine', 'stress', 'leave', 'alone', 'get', 'hook', 'first', 'time', 'saw', 'fell', 'love', 'dance', 'want', 'hit', 'put', 'back', 'wall', 'go', 'know', 'laila', 'want', 'mommy', 'lala', 'eye', 'turn', 'lala', 'look', 'lick', 'lips', 'lala', 'red', 'lipstick', 'lala', 'loose', 'waist', 'lala', 'baby', 'catch', 'lala', 'raise', 'height', 'lala', 'tell', 'pick', 'lala', 'see', 'make', 'tower', 'liege', 'ticket', 'low', '20you', 'might', 'also', 'like', 'let', 'drive', 'always', 'feel', 'arrive', 'somewhere', 'crown', 'since', 'young', 'photo', 'look', 'good', 'front', 'well', 'give', 'couple', 'glass', 'red', 'wine', 'ask', 'pause', 'fifth', 'take', 'ride', 'around', 'neighborhood', 'kyoto', 'see', 'face', 'face', 'remain', 'trinco', 'alone', 'alone', 'pays', 'turn', 'another', 'one', 'one', 'turn', 'get', 'attention', 'want', 'laila', 'want', 'mommy', 'lala', 'eye', 'turn', 'lala', 'look', 'lick', 'lips', 'lala', 'red', 'lipstick', 'lala', 'loose', 'waist', 'lala', 'baby', 'catch', 'lala', 'raise', 'height', 'lala', 'tell', 'pick', 'lala', 'something', 'inevitable', 'baby', 'desire', 'remarkable', 'let', 'u', 'like', 'cable', 'look', 'blame', 'watch', 'u', 'let', 'u', 'go', 'told', 'think', 'much', 'give', 'face', 'see', 'savor', 'neighbor', 'watch', 'balcony', 'open', 'love', 'put', 'bad', 'face', 'stuff', 'bullet', 'comb', 'even', 'left', 'short', 'one', 'living', 'room', 'focus', 'laila', 'carmela', 'lala', 'go', 'lala', 'always', 'ask', 'lala', 'never', 'stop', 'lala', 'like', 'lala', 'crazy', 'lala', 'touch', 'lala', 'look', 'lala', 'carmela', 'go', 'always', 'asks', 'never', 'stop', 'like', 'crazy', 'touch', 'look', 'make', 'embed', 'hate', 'give', 'satisfaction', 'ask', 'castle', 'built', 'people', 'pretend', 'care', 'want', 'look', 'cool', 'guy', 'get', 'see', 'party', 'diamonds', 'sometimes', 'close', 'eye', 'six', 'month', 'torture', 'sell', 'forbidden', 'paradise', 'love', 'truly', 'get', 'laugh', 'stupidity', 'make', 'real', 'big', 'mistake', 'make', 'bad', 'one', 'look', 'fine', 'know', 'strange', 'come', 'night', 'use', 'think', 'smart', 'make', 'look', 'naive', 'way', 'sell', 'part', 'sunk', 'teeth', 'bloodsucker', 'fame', 'bleed', 'dry', 'like', 'vampire', 'every', 'girl', 'ever', 'talk', 'told', 'bad', 'bad', 'news', 'call', 'crazy', 'hate', 'way', 'call', 'crazy', 'convincing', 'lie', 'without', 'flinch', 'lie', 'lie', 'lie', 'mesmerize', 'paralyze', 'little', 'thrill', 'figure', 'know', 'never', 'go', 'girls', 'age', 'know', 'good', 'might', 'also', 'like', 'make', 'real', 'big', 'mistake', 'make', 'bad', 'one', 'look', 'fine', 'know', 'strange', 'come', 'night', 'use', 'think', 'smart', 'make', 'look', 'naive', 'way', 'sell', 'part', 'sunk', 'teeth', 'bloodsucker', 'fame', 'bleed', 'dry', 'like', 'vampire', 'ah', 'say', 'true', 'love', 'would', 'hard', 'love', 'anyone', 'would', 'mean', 'heart', 'try', 'help', 'know', 'think', 'kind', 'thing', 'never', 'understand', 'make', 'real', 'big', 'mistake', 'make', 'bad', 'one', 'look', 'fine', 'know', 'strange', 'come', 'night', 'use', 'think', 'smart', 'make', 'look', 'naive', 'way', 'sell', 'part', 'sunk', 'teeth', 'bloodsucker', 'fame', 'bleed', 'dry', 'like', 'vampire', 'come', 'harry', 'want', 'say', 'goodnight', 'hold', 'back', 'gravitys', 'hold', 'back', 'want', 'hold', 'palm', 'hand', 'leave', 'nothing', 'say', 'everything', 'get', 'way', 'seem', 'replace', 'one', 'stay', 'ooh', 'world', 'u', 'know', 'world', 'u', 'know', 'know', 'answer', 'phone', 'harry', 'good', 'alone', 'sit', 'home', 'floor', 'kind', 'pill', 'ring', 'bell', 'nobodys', 'come', 'help', 'daddy', 'live', 'want', 'know', 'well', 'ooh', 'might', 'also', 'like', 'world', 'u', 'know', 'world', 'u', 'know', 'know', 'go', 'home', 'get', 'ahead', 'lightspeed', 'internet', 'want', 'talk', 'way', 'leave', 'american', 'two', 'kid', 'follow', 'want', 'talk', 'first', 'know', 'oxytocin', 'make', 'okay', 'come', 'back', 'feel', 'sit', 'around', 'wait', 'world', 'end', 'day', 'could', 'leave', 'try', 'break', 'break', 'rule', 'last', 'time', 'last', 'time', 'know', 'still', 'outside', 'party', 'smoking', 'car', 'sevennation', 'army', 'fight', 'bar', 'tell', 'sorry', 'tell', 'get', 'let', 'get', 'chemical', 'let', 'get', 'chemical', 'every', 'time', 'ready', 'make', 'change', 'mhm', 'turn', 'around', 'brain', 'wood', 'tryna', 'fight', 'fate', 'late', 'save', 'face', 'get', 'away', 'maybe', 'mistake', 'maybe', 'mistake', 'break', 'break', 'rule', 'last', 'time', 'last', 'time', 'know', 'still', 'still', 'see', 'post', 'malone', 'liege', 'ticket', 'low', '26you', 'might', 'also', 'like', 'outside', 'party', 'smoking', 'car', 'sevennation', 'army', 'fight', 'bar', 'tell', 'sorry', 'tell', 'get', 'let', 'get', 'chemical', 'chemical', 'let', 'get', 'chemical', 'chemical', 'let', 'get', 'chemical', 'let', 'get', 'chemical', 'ahah', 'ahah', 'ahah', 'tell', 'sorry', 'tell', 'get', 'let', 'get', 'chemical', 'tension', 'definitely', 'rise', 'id', 'right', 'time', 'time', 'time', 'time', 'time', 'teatime', 'like', 'get', 'cup', 'tee', 'time', 'like', 'golf', 'quarter', 'six', 'love', 'regular', 'famous', 'hoe', 'lame', 'stay', 'heard', 'new', 'joint', 'embarrass', 'talk', 'cop', 'therapist', 'act', 'like', 'love', 'american', 'really', 'truth', 'scar', '6', 'scar', '6', 'scar', '6', 'bodyguard', 'put', 'work', 'fluke', 'want', 'go', 'inherit', 'talk', 'boy', 'comparison', 'come', 'boy', 'arrogant', 'weapon', 'get', 'terrorist', 'like', 'producer', 'girl', 'air', 'ask', 'bread', 'parent', 'tell', 'get', 'cash', 'say', 'could', 'wait', 'rack', 'arabic', 'pull', 'million', 'stare', 'get', 'hard', 'wire', 'hit', 'schedule', 'come', 'spin', 'u', 'real', 'man', 'spin', 'narrative', 'melt', 'chain', 'buy', 'boss', 'give', 'heritage', 'since', 'around', 'member', 'do', 'hung', 'louis', 'even', 'wear', 'come', 'boy', 'repair', 'come', 'boy', 'spar', 'lucky', 'vogue', 'sue', 'would', 'pass', 'paris', 'see', 'travis', 'scott', 'liege', 'ticket', 'low', '83you', 'might', 'also', 'like', 'ii', 'crazy', 'crazy', 'ah', 'scar', 'seven', 'seven', 'onethree', 'turn', 'eleven', 'keep', 'open', 'like', 'eleven', 'lit', 'house', 'get', 'seven', 'heaven', 'think', 'satanic', 'keep', 'reverend', 'lily', 'shawty', 'therapist', 'pop', 'inch', 'way', 'start', 'confess', 'know', 'stake', 'scream', 'free', 'jeffery', 'connect', 'collect', 'call', 'right', 'celly', 'give', 'blue', 'talk', 'belly', 'keep', 'sincere', 'go', 'makaveli', 'got', 'juice', 'heavy', 'juice', 'always', 'ttime', 'ready', 'ah', 'crazy', 'fu', 'let', 'u', 'get', 'wrap', 'cheese', 'wrap', 'around', 'get', 'property', 'wrap', 'cheese', 'wrap', 'chocolate', 'ap', 'chocolate', 'v', 'get', 'wonka', 'factory', 'v', 'burn', 'athlete', 'like', 'calorie', 'find', 'another', 'flame', 'hot', 'ooh', 'crazy', 'nah', 'crazy', 'crazy', 'nah', 'nah', 'crazy', 'crazy', 'crazy', 'many', 'texas', 'boys', 'do', 'ran', 'couple', 'maybe', 'couple', 'maybe', 'swing', 'pickup', 'truck', 'baby', 'mercedes', 'mercedes', 'baby', 'baby', 'shoot', 'palmar', 'like', 'baby', 'walmart', 'boy', 'go', 'lionel', 'mess', 'go', 'tom', 'brady', 'wood', 'use', 'wear', 'bust', 'back', 'old', 'day', 'wood', 'let', 'chain', 'hang', 'get', 'tuck', 'maybe', 'stuck', 'tuck', 'talk', 'scarface', 'real', 'life', 'ooh', 'crazy', 'crazy', 'crazy', 'man', 'club', 'since', 'lose', 'mercedes', 'straight', 'man', 'clique', 'since', 'lose', 'great', 'nah', 'nah', 'nah', 'outside', 'army', 'need', 'uhhuh', 'boys', 'roll', 'brown', 'like', 'whip', 'gravy', 'make', 'circus', 'outside', 'like', 'barn', 'bailey', 'lit', 'block', 'hanging', 'side', 'like', 'really', 'hang', 'blickey', 'blickey', 'blow', 'move', 'side', 'want', 'raw', 'fade', 'huh', 'huh', 'huh', 'huh', 'crazy', 'uh', 'crazy', 'uh', 'crazy', 'crazy', 'crazy', 'crazy', 'vibez', 'another', 'banger', 'baby', 'calm', 'calm', 'girl', 'body', 'e', 'put', 'heart', 'lockdown', 'lockdown', 'lockdown', 'girl', 'sweet', 'like', 'santa', 'ooh', 'santa', 'ooh', 'tell', 'say', 'love', 'dey', 'form', 'yang', 'yang', 'tell', 'woah', 'woah', 'woah', 'woah', 'baby', 'come', 'give', 'lolololowoahwoahwoah', 'get', 'like', 'woahwoahwoahwoahwoah', 'shawty', 'come', 'give', 'lolololowoahwoahwoah', 'see', 'fine', 'girl', 'party', 'wear', 'yellow', 'every', 'girl', 'dey', 'much', 'girl', 'mellow', 'nail', 'dey', 'find', 'situation', 'go', 'use', 'take', 'tell', 'hello', 'finally', 'find', 'way', 'talk', 'girl', 'wan', 'follow', 'come', 'dey', 'form', 'mhmm', 'want', 'conform', 'mhmm', 'start', 'feel', 'brown', 'bump', 'warm', 'mhmm', 'dey', 'give', 'small', 'small', 'woah', 'know', 'say', 'sari', 'pas', 'one', 'one', 'mhmm', 'feeling', 'insecure', 'woah', 'friend', 'go', 'dey', 'gum', 'like', 'chew', 'gum', 'mhmm', 'go', 'dey', 'gum', 'like', 'chew', 'gum', 'woah', 'woah', 'ooh', 'see', 'rea', 'liege', 'ticket', 'low', '65you', 'might', 'also', 'like', 'baby', 'calm', 'calm', 'girl', 'body', 'e', 'put', 'heart', 'lockdown', 'lockdown', 'lockdown', 'girl', 'sweet', 'like', 'santa', 'ooh', 'santa', 'ooh', 'tell', 'say', 'love', 'dey', 'form', 'yang', 'yang', 'tell', 'woah', 'woah', 'woah', 'woah', 'baby', 'come', 'give', 'lolololowoahwoahwoah', 'get', 'like', 'woahwoahwoahwoahwoah', 'shawty', 'come', 'give', 'lolololowoahwoahwoah', 'reach', 'house', 'say', 'make', 'rest', 'small', 'make', 'rest', 'small', 'wake', 'na', 'dey', 'mind', 'ohwoah', 'dna', 'dey', 'mind', 'ohwoah', 'day', 'one', 'day', 'twowo', 'fit', 'focus', 'fit', 'focus', 'na', 'call', 'say', 'make', 'link', 'say', 'make', 'link', 'start', 'dey', 'tell', 'feel', 'heart', 'dey', 'race', 'baby', 'girl', 'leave', 'go', 'love', 'e', 'get', 'many', 'girl', 'wey', 'put', 'heart', 'pain', 'sheba', 'feel', 'pain', 'baby', 'calm', 'calm', 'girl', 'body', 'e', 'put', 'heart', 'lockdown', 'lockdown', 'lockdown', 'girl', 'sweet', 'like', 'santa', 'ooh', 'santa', 'ooh', 'tell', 'say', 'love', 'dey', 'form', 'yang', 'yang', 'tell', 'woah', 'woah', 'woah', 'woah', 'baby', 'come', 'give', 'lolololowoahwoahwoah', 'get', 'like', 'woahwoahwoahwoahwoah', 'shawty', 'come', 'give', 'lolololowoahwoahwoah', 'still', 'fan', 'even', 'though', 'salty', 'hate', 'see', 'broad', 'know', 'happy', 'hate', 'see', 'happy', 'one', 'driving', 'mature', 'mature', 'mature', 'get', 'therapist', 'tell', 'men', 'want', 'none', 'want', 'one', 'might', 'might', 'ex', 'best', 'idea', 'new', 'girlfriend', 'next', 'get', 'might', 'ex', 'still', 'love', 'though', 'rather', 'jail', 'alone', 'get', 'sense', 'lose', 'get', 'sense', 'might', 'really', 'love', 'text', 'go', 'evidence', 'text', 'evidence', 'try', 'ration', 'murder', 'crime', 'passion', 'reach', 'farmer', 'market', 'perfect', 'peach', 'basement', 'planning', 'home', 'invasion', 'lay', 'facedown', 'get', 'singing', 'beat', 'see', 'sea', 'liege', 'ticket', 'low', '120you', 'might', 'also', 'like', 'mature', 'mature', 'mature', 'get', 'therapist', 'tell', 'men', 'want', 'none', 'want', 'one', 'might', 'might', 'ex', 'best', 'idea', 'new', 'girlfriend', 'next', 'get', 'might', 'ex', 'still', 'love', 'though', 'rather', 'jail', 'alone', 'love', 'love', 'drug', 'drug', 'sober', 'u', 'love', 'love', 'drug', 'drug', 'sober', 'know', 'u', 'go', 'tonight', 'kill', 'ex', 'best', 'idea', 'idea', 'kill', 'girlfriend', 'next', 'get', 'kill', 'ex', 'still', 'love', 'though', 'rather', 'alone', 'baby', 'tell', 'truth', 'forgot', 'know', 'one', 'night', 'na', 'repeat', 'maybe', 'want', 'find', 'lose', 'another', 'pride', 'want', 'talk', 'go', 'compete', 'let', 'u', 'see', 'hey', 'like', 'lose', 'hey', 'tell', 'go', 'spend', 'look', 'cell', 'phone', 'ah', 'wow', 'even', 'take', 'swear', 'go', 'answer', 'would', 'like', 'see', 'would', 'like', 'see', 'jump', 'top', 'uh', 'uh', 'uh', 'rich', 'look', 'uh', 'uh', 'uh', 'hey', 'know', 'wait', 'tell', 'pride', 'win', 'u', 'hey', 'baby', 'tell', 'truth', 'forgot', 'know', 'one', 'night', 'na', 'repeat', 'maybe', 'want', 'find', 'hey', 'lose', 'another', 'pride', 'want', 'talk', 'go', 'compete', 'let', 'u', 'see', 'hey', 'might', 'also', 'like', 'uh', 'since', 'saw', 'think', 'ate', 'hey', 'divide', 'one', 'way', 'wine', 'stain', 'still', 'carpet', 'tote', 'lost', 'time', 'tell', 'like', 'hot', 'take', 'compliment', 'villain', 'dare', 'hey', 'want', 'long', 'time', 'mommy', 'go', 'give', 'pool', 'hurt', 'like', 'glow', 'glou', 'like', 'flow', 'flow', 'calm', 'always', 'steal', 'show', 'perverse', 'go', 'give', 'demon', 'mami', 'put', 'four', 'go', 'go', 'hey', 'hey', 'mommy', 'tell', 'see', 'hey', 'want', 'feel', 'hey', 'picket', 'almost', 'lose', 'send', 'hey', 'tell', 'truth', 'forget', 'know', 'one', 'night', 'na', 'repeat', 'maybe', 'want', 'find', 'lose', 'another', 'pride', 'want', 'talk', 'go', 'compete', 'let', 'u', 'see', 'hey', 'curio', 'tell', 'positive', 'lately', 'want', 'show', 'body', 'always', 'lily', 'mathematician', 'lately', 'cash', 'get', 'get', 'lose', 'count', 'bag', 'move', 'fast', 'hard', 'time', 'last', 'member', 'cop', 'harass', 'talk', 'boy', 'badge', 'life', 'life', 'try', 'keep', 'tryna', 'keep', 'time', 'time', 'never', 'think', 'would', 'make', 'never', 'think', 'would', 'make', 'could', 'break', 'could', 'break', 'could', 'take', 'could', 'take', 'life', 'life', 'try', 'keep', 'tryna', 'keep', 'decide', 'finish', 'medium', 'call', 'menace', 'do', 'sat', 'mayor', 'politician', 'tryna', 'change', 'image', 'blame', 'past', 'come', 'trench', 'say', 'would', 'never', 'superstar', 'know', 'different', 'voice', 'system', 'give', 'choice', 'know', 'people', 'still', 'unemployed', 'know', 'felon', 'tryna', 'get', 'food', 'child', 'support', 'support', 'visit', 'go', 'court', 'go', 'jail', 'chaining', 'know', 'famous', 'see', 'go', 'joke', 'stimulus', 'really', 'come', 'clutch', 'know', 'kid', 'want', 'hurt', 'theyself', 'stop', 'tryna', 'take', 'drug', 'refer', 'tryna', 'good', 'tryna', 'well', 'health', 'might', 'also', 'like', 'life', 'life', 'try', 'keep', 'tryna', 'keep', 'time', 'time', 'never', 'think', 'would', 'make', 'never', 'think', 'would', 'make', 'could', 'break', 'could', 'break', 'could', 'take', 'could', 'take', 'life', 'life', 'try', 'keep', 'tryna', 'keep', 'firstgeneration', 'ghetto', 'cole', 'world', 'hello', 'make', 'city', 'head', 'straight', 'keep', 'shoot', 'lead', 'young', 'jordan', 'peel', 'get', 'get', 'spit', 'cheat', 'code', 'like', 'face', 'rico', 'put', 'hit', 'another', 'one', 'another', 'one', 'get', 'like', 'hundred', 'lap', 'think', 'ahead', 'really', 'front', 'fumbling', 'bag', 'little', 'crumbs', 'reminder', 'humble', 'could', 'go', 'instant', 'running', 'long', 'distance', 'piston', 'fire', 'stuck', 'maybe', 'retire', 'feel', 'like', 'hit', 'prime', 'day', 'see', 'rapper', 'die', 'way', 'even', 'get', 'shine', 'never', 'even', 'hear', 'lily', 'buddy', 'til', 'somebody', 'murder', 'lily', 'buddy', 'phone', 'search', 'lily', 'buddy', 'name', 'get', 'play', 'tune', 'day', 'room', 'thinking', 'wicked', 'get', 'name', 'buzz', 'get', 'go', 'lay', 'tomb', 'medium', 'thirsty', 'click', 'get', 'new', 'rule', 'never', 'post', 'rapper', 'alive', 'post', 'get', 'hit', 'simple', 'principle', 'tempo', 'invincible', 'even', 'vent', 'rather', 'interview', 'day', 'like', 'go', 'ho', 'phase', 'young', 'shoot', 'whip', 'like', 'road', 'rage', 'pray', 'dawgs', 'stay', 'pay', 'thing', 'old', 'age', 'life', 'life', 'try', 'keep', 'tryna', 'keep', 'time', 'time', 'never', 'think', 'would', 'make', 'never', 'think', 'would', 'make', 'could', 'break', 'could', 'break', 'could', 'take', 'could', 'take', 'life', 'life', 'try', 'keep', 'tryna', 'keep', 'good', 'gold', 'kind', 'dream', 'sell', 'right', 'til', 'build', 'home', 'watch', 'burn', 'mme', 'want', 'leave', 'want', 'lie', 'start', 'cry', 'remember', 'buy', 'flower', 'write', 'name', 'sand', 'talk', 'hour', 'say', 'thing', 'understand', 'take', 'dancing', 'hold', 'hand', 'love', 'good', 'love', 'well', 'love', 'good', 'baby', 'love', 'good', 'love', 'well', 'baby', 'paint', 'nail', 'cherryred', 'match', 'rose', 'leave', 'remorse', 'regret', 'forgive', 'every', 'word', 'say', 'might', 'also', 'like', 'ooh', 'want', 'leave', 'baby', 'want', 'fight', 'start', 'cry', 'remember', 'buy', 'flower', 'write', 'name', 'sand', 'talk', 'hour', 'say', 'thing', 'understand', 'take', 'dancing', 'hold', 'hand', 'love', 'good', 'love', 'well', 'love', 'good', 'baby', 'love', 'good', 'love', 'well', 'baby', 'love', 'good', 'love', 'well', 'baby', 'love', 'good', 'ooh', 'want', 'leave', 'want', 'fight', 'start', 'cry', 'remember', 'buy', 'flower', 'uhhuh', 'write', 'name', 'sand', 'talk', 'hour', 'say', 'thing', 'understand', 'never', 'take', 'dance', 'hold', 'hand', 'love', 'good', 'love', 'well', 'love', 'well', 'love', 'well', 'baby', 'uh', 'love', 'good', 'love', 'well', 'baby', 'love', 'good', 'love', 'well', 'baby', 'love', 'good', 'tell', 'go', 'know', 'care', 'tryna', 'wash', 'away', 'blood', 'spilt', 'burden', 'share', 'two', 'sinner', 'atone', 'lone', 'prayer', 'soul', 'tie', 'intertwined', 'pride', 'guilt', 'ooh', 'darkness', 'distance', 'way', 'live', 'ooh', 'know', 'resist', 'love', 'hate', 'time', 'drink', 'poison', 'vine', 'love', 'hate', 'time', 'hide', 'sin', 'daylight', 'daylight', 'run', 'daylight', 'daylight', 'run', 'daylight', 'love', 'hate', 'time', 'tell', 'last', 'time', 'spare', 'mercy', 'might', 'find', 'knee', 'deep', 'way', 'lord', 'try', 'try', 'follow', 'light', 'nighttime', 'please', 'leave', 'end', 'might', 'also', 'like', 'ooh', 'darkness', 'distance', 'beg', 'forgiveness', 'ooh', 'know', 'might', 'resist', 'love', 'hate', 'time', 'drink', 'poison', 'vine', 'love', 'hate', 'time', 'hide', 'sin', 'daylight', 'daylight', 'run', 'daylight', 'daylight', 'run', 'daylight', 'love', 'hate', 'time', 'love', 'hate', 'time', 'drink', 'poison', 'vine', 'love', 'hate', 'time', 'hide', 'sin', 'daylight', 'daylight', 'run', 'daylight', 'daylight', 'run', 'daylight', 'love', 'hate', 'time', 'believe', 'man', 'metro', 'boom', 'want', 'somebody', 'say', 'saw', 'person', 'kiss', 'would', 'never', 'ask', 'keep', 'want', 'know', 'play', 'keep', 'low', 'heart', 'take', 'anymore', 'creep', 'please', 'let', 'show', 'baby', 'want', 'know', 'think', 'hold', 'look', 'eye', 'believe', 'need', 'know', 'truth', 'baby', 'keep', 'want', 'know', 'play', 'keep', 'low', 'heart', 'take', 'anymore', 'creep', 'please', 'let', 'show', 'baby', 'want', 'know', 'might', 'also', 'like', 'touch', 'well', 'touch', 'well', 'watch', 'fall', 'asleep', 'watch', 'fall', 'asleep', 'show', 'thing', 'use', 'well', 'way', 'well', 'way', 'say', 'say', 'go', 'thing', 'come', 'back', 'woah', 'woah', 'woah', '21', 'crush', 'cuff', 'like', 'precinct', 'go', 'housewife', 'sneaky', 'link', 'get', 'rid', 'around', 'type', 'benes', 'rover', 'girl', 'use', 'ride', 'risky', 'one', 'put', 'eliantte', 'fashion', 'nova', 'model', 'put', 'runway', 'rock', 'coach', 'bag', 'get', 'chanene', 'side', 'frisco', 'call', 'baybae', '21', 'get', 'girl', 'still', 'feel', 'alone', 'play', 'mean', 'home', 'home', 'nightmare', 'go', 'phone', '21', 'even', 'record', 'get', 'zone', 'want', 'know', 'play', 'keep', 'low', 'heart', 'take', 'anymore', 'creep', 'please', 'let', 'show', 'baby', 'want', 'know', 'play', 'keep', 'low', 'heart', 'take', 'anymore', 'creep', 'please', 'let', 'show', 'baby', 'want', 'know', 'creep', 'let', 'find', 'get', 'hotel', 'never', 'bring', 'house', 'well', 'way', 'baby', 'say', 'go', 'thing', 'come', 'back', 'take', 'look', 'inside', 'heart', 'room', 'room', 'hold', 'breath', 'till', 'get', 'one', 'knee', 'still', 'get', 'one', 'knee', 'want', 'hold', 'look', 'good', 'enough', 'look', 'good', 'enough', 'ever', 'feel', 'would', 'ever', 'picture', 'u', 'would', 'ever', 'picture', 'u', 'every', 'time', 'pull', 'hair', 'well', 'fear', 'fear', 'find', 'one', 'day', 'disappear', 'point', 'cry', 'never', 'even', 'love', 'never', 'even', 'love', 'ever', 'want', 'ever', 'good', 'enough', 'never', 'good', 'enough', 'theatre', 'boy', 'liar', 'boy', 'liar', 'see', 'ya', 'look', 'boy', 'boy', 'liar', 'boy', 'liar', 'see', 'ya', 'look', 'boy', 'might', 'also', 'like', 'good', 'enough', 'good', 'enough', 'good', 'enough', 'good', 'enough', 'good', 'enough', 'good', 'enough', 'good', 'enough', 'good', 'enough', 'say', 'good', 'enough', 'grab', 'dumdum', 'think', 'huh', 'tell', 'one', 'make', 'fun', 'haha', 'girl', 'bum', 'grrah', 'like', 'boy', 'cap', 'say', 'home', 'know', 'like', 'bet', 'blow', 'back', 'think', 'know', 'huh', 'call', 'phone', 'like', 'send', 'pink', 'duck', 'know', 'grrah', 'hit', 'go', 'respond', 'grrah', 'sleep', 'enough', 'without', 'eat', 'enough', 'without', 'huh', 'speak', 'mean', 'huh', 'like', 'sneaky', 'grrah', 'theatre', 'boys', 'liar', 'boy', 'liar', 'see', 'ya', 'look', 'boy', 'boy', 'liar', 'boy', 'liar', 'see', 'ya', 'look', 'boy', 'good', 'enough', 'good', 'enough', 'good', 'enough', 'good', 'enough', 'good', 'enough', 'good', 'enough', 'good', 'enough', 'good', 'enough', '', '', '', 'let', 'get', 'let', 'go', '', '', '', '', 'let', 'know', 'let', 'know', '', '', '', '', '', 'lose', 'without', 'baby', 'wish', 'would', 'love', 'want', 'nobody', 'else', 'wish', 'could', 'love', 'wish', 'would', 'love', 'want', 'nobody', 'else', 'wish', 'could', 'love', 'might', 'also', 'like', '', '', '', '', 'make', 'feel', 'well', 'make', 'forever', '', '', 'say', 'alright', 'say', 'one', 'sorry', '', '', '', '', '', '', '', '', 'lose', 'without', 'baby', 'lose', 'without', 'baby', 'lose', 'without', 'baby', 'wish', 'would', 'love', 'want', 'nobody', 'else', 'wish', 'could', 'love', 'wish', 'would', 'love', 'want', 'nobody', 'else', 'wish', 'could', 'love', 'wish', 'would', 'love', 'want', 'nobody', 'else', 'wish', 'could', 'love', 'uh', 'return', 'study', 'columbia', 'island', 'nothing', 'year', 'long', 'study', 'fulfill', 'duty', 'call', 'friend', 'tell', 'summer', 'drinking', 'want', 'go', 'depend', 'one', 'met', 'expect', 'saw', 'go', 'disco', 'look', 'back', 'nervous', 'little', 'smile', 'kiss', 'would', 'get', 'angry', 'let', 'love', 'want', 'anything', 'met', 'expect', 'saw', 'go', 'disco', 'look', 'back', 'nervous', 'little', 'smile', 'kiss', 'get', 'angry', 'let', 'love', 'want', 'anything', 'baby', 'know', 'summer', 'maybe', 'august', 'end', 'see', 'want', 'something', 'accumulate', 'memory', 'every', 'time', 'lip', 'bite', 'push', 'stick', 'wall', 'look', 'u', 'fix', 'one', 'last', 'time', 'know', 'study', 'usa', 'use', 'mercy', 'baby', 'know', 'get', 'afraid', 'commitment', 'want', 'forget', 'mom', 'hate', 'help', 'man', 'doubt', 'know', 'laugh', 'chingamo', 'dimly', 'light', 'room', 'pour', 'last', 'drink', 'take', 'care', 'cheer', 'sentimental', 'never', 'attitude', 'might', 'also', 'like', 'meet', 'expect', 'saw', 'go', 'disco', 'look', 'back', 'nervous', 'little', 'smile', 'kiss', 'get', 'angry', 'let', 'love', 'want', 'anything', 'relive', 'everything', 'summer', 'beach', 'hold', 'hand', 'kiss', 'without', 'love', 'late', 'get', 'early', 'sang', 'song', 'play', 'piano', 'island', 'get', 'small', 'every', 'time', 'look', 'listen', 'reggaeton', '180', 'section', 'leaf', 'hope', 'nothing', 'vain', 'never', 'anything', 'wholesome', 'meet', 'expect', 'saw', 'enter', 'disco', 'return', 'gaze', 'nervous', 'little', 'smile', 'kiss', 'get', 'angry', 'let', 'love', 'want', 'anything', 'returned', 'study', 'columbia', 'island', 'nothing', 'good', 'night', 'year', 'seem', 'long', 'study', 'fulfill', 'duty', 'good', 'night', 'good', 'night', 'call', 'friend', 'tell', 'summer', 'drinking', 'whistle', 'want', 'go', 'depend', 'one', 'get', 'fast', 'car', 'want', 'ticket', 'anywhere', 'maybe', 'make', 'deal', 'maybe', 'together', 'get', 'somewhere', 'place', 'well', 'start', 'zero', 'get', 'nothing', 'lose', 'maybe', 'make', 'something', 'get', 'nothing', 'prove', 'get', 'fast', 'car', 'get', 'plan', 'get', 'u', 'work', 'convenience', 'store', 'manage', 'save', 'little', 'bit', 'money', 'drive', 'far', 'across', 'border', 'city', 'get', 'job', 'finally', 'see', 'mean', 'live', 'see', 'old', 'man', 'get', 'problem', 'live', 'bottle', 'way', 'say', 'bodys', 'old', 'work', 'body', 'young', 'look', 'like', 'mama', 'go', 'leave', 'wanted', 'life', 'could', 'give', 'say', 'somebody', 'get', 'take', 'care', 'quit', 'school', 'see', 'luke', 'comb', 'liege', 'ticket', 'low', '116you', 'might', 'also', 'like', 'get', 'fast', 'car', 'fast', 'enough', 'fly', 'away', 'still', 'get', 'make', 'decision', 'leave', 'tonight', 'live', 'die', 'way', 'remember', 'drive', 'drive', 'car', 'speed', 'fast', 'felt', 'like', 'city', 'light', 'lay', 'u', 'arm', 'felt', 'nice', 'wrap', 'around', 'shoulder', 'feeling', 'belong', 'feeling', 'could', 'someone', 'someone', 'someone', 'get', 'fast', 'car', 'go', 'cruise', 'entertain', 'still', 'get', 'job', 'work', 'market', 'checkout', 'girl', 'know', 'thing', 'get', 'well', 'find', 'work', 'get', 'promote', 'move', 'shelter', 'buy', 'big', 'house', 'live', 'suburb', 'say', 'remember', 'drive', 'drive', 'car', 'speed', 'fast', 'felt', 'like', 'city', 'light', 'lay', 'u', 'arm', 'felt', 'nice', 'wrap', 'around', 'shoulder', 'feeling', 'belong', 'feeling', 'could', 'someone', 'someone', 'someone', 'get', 'fast', 'car', 'get', 'job', 'pay', 'bill', 'stay', 'drink', 'late', 'bar', 'see', 'friends', 'kid', 'would', 'always', 'hop', 'good', 'thought', 'maybe', 'together', 'would', 'find', 'got', 'plan', 'go', 'nowhere', 'take', 'fast', 'car', 'keep', 'drive', 'remember', 'drive', 'drive', 'car', 'speed', 'fast', 'felt', 'like', 'city', 'light', 'lay', 'u', 'arm', 'felt', 'nice', 'wrap', 'around', 'shoulder', 'feeling', 'belong', 'feeling', 'could', 'someone', 'someone', 'someone', 'get', 'fast', 'car', 'fast', 'enough', 'fly', 'away', 'still', 'get', 'make', 'decision', 'leave', 'tonight', 'live', 'die', 'way', 'every', 'good', 'girl', 'need', 'little', 'every', 'block', 'boy', 'need', 'little', 'love', 'put', 'pick', 'see', 'panoramic', 'view', 'point', 'view', 'bae', 'energy', 'lemon', 'pepper', 'thing', 'tenpiece', 'baby', 'bedroom', 'bully', 'band', 'go', 'make', 'flip', 'handle', 'never', 'switch', 'side', 'switch', 'angle', 'ooh', 'go', 'crazy', 'like', 'rambo', 'every', 'good', 'girl', 'need', 'little', 'thugs', 'every', 'block', 'boy', 'need', 'little', 'love', 'love', 'put', 'pick', 'ayy', 'ayy', 'every', 'good', 'girl', 'need', 'little', 'thugs', 'every', 'block', 'boy', 'need', 'little', 'love', 'love', 'put', 'pick', 'ayy', 'ayy', 'might', 'also', 'like', 'hit', 'hit', 'truck', 'get', 'tucked', 'get', 'like', 'stuck', 'night', 'like', 'get', 'say', 'know', 'site', 'bedroom', 'bully', 'band', 'go', 'make', 'flip', 'handle', 'never', 'switch', 'side', 'switch', 'angle', 'ooh', 'go', 'crazy', 'like', 'rambo', 'every', 'good', 'girl', 'need', 'little', 'thugs', 'every', 'block', 'boy', 'need', 'little', 'love', 'love', 'put', 'pick', 'ayy', 'ayy', 'every', 'good', 'girl', 'need', 'little', 'thugs', 'every', 'block', 'boy', 'need', 'little', 'love', 'love', 'put', 'pick', 'ayy', 'ayy', 'care', 'run', 'street', 'long', 'come', 'home', 'love', 'way', 'walk', 'way', 'speak', 'go', 'keep', 'real', 'deal', 'reason', 'speed', 'put', 'name', 'name', 'even', 'exchange', 'tell', 'stay', 'deal', 'go', 'tell', 'go', 'tell', 'babe', 'every', 'good', 'girl', 'need', 'little', 'needs', 'little', 'thug', 'every', 'block', 'boy', 'need', 'little', 'love', 'need', 'little', 'love', 'put', 'pick', 'every', 'good', 'girl', 'need', 'little', 'needs', 'little', 'love', 'every', 'block', 'boy', 'need', 'little', 'love', 'need', 'little', 'love', 'thug', 'put', 'pick', 'ayy', 'ayy', 'back', 'like', 'back', 'like', 'back', 'back', 'like', 'back', 'go', 'like', 'wood', 'hey', 'hey', 'je', 'white', 'yup', 'yup', 'way', 'yup', 'yup', 'need', 'lily', 'love', 'know', 'mean', 'ayyayy', 'wood', 'ride', 'woahembed', 'go', 'pop', 'baby', 'demon', 'swish', 'lit', 'lit', 'move', 'full', 'one', 'sip', 'sip', 'fall', 'get', 'grip', 'grip', 'around', 'trap', 'hit', 'hit', 'hit', 'around', 'map', 'trip', 'skrrt', 'take', 'like', 'nine', 'ten', 'think', 'go', 'find', 'think', 'get', 'bond', 'behind', 'tint', 'sing', 'vent', 'forget', 'place', 'go', 'right', 'put', 'head', 'still', 'pop', 'dance', 'still', 'drop', 'know', 'got', 'lot', 'still', 'chance', 'yeahyeah', 'hace', 'tiempo', 'te', 'veo', 'eh', 'e', 'que', 'ahora', 'en', 'miami', 'jangueo', 'eh', 'eh', 'ya', 'tengo', 'rodeo', 'ahora', 'en', 'wagon', 'spoteo', 'ey', 'te', 'lo', 'meto', 'al', 'front', 'playa', 'como', 'aquello', 'tiempo', 'de', 'camino', 'maya', 'ni', 'fumaba', 'chingada', 'te', 'arrebat', 'dale', 'pierce', 'tiempo', 'lo', 'piense', 'trpate', 'bien', 'local', 'local', 'yo', 'bien', 'loco', 'loco', 'si', 'ahora', 'tu', 'mai', 'no', 'pillar', 'side', 'una', 'foot', 'nota', 'explota', 'el', 'ticket', 'lo', 'explore', 'vamos', 'pay', 'mayo', 'mushy', 'ya', 'le', 'texted', 'al', 'pilot', 'heh', 'see', 'travis', 'scott', 'liege', 'ticket', 'low', '83you', 'might', 'also', 'like', 'know', 'one', 'time', 'swish', 'feel', 'like', 'go', 'go', 'night', 'fire', 'need', 'back', 'sooner', 'sooner', 'come', 'back', 'side', 'get', 'back', 'cooler', 'cooler', 'run', 'back', 'one', 'time', 'grab', 'uno', 'uno', 'ooh', 'uno', 'ooooh', 'mmmm', 'mmmm', 'ooh', 'mmmm', 'mmmm', 'oohyeah', 'mmmm', 'mix', 'drug', 'pain', 'let', 'wave', 'lead', 'way', 'cannes', 'sainttropez', 'call', 'name', 'know', 'roll', 'face', 'know', 'high', 'pop', 'rub', 'body', 'clothe', 'go', 'take', 'south', 'france', 'go', 'party', 'lily', 'yacht', 'go', 'til', 'seasick', 'skrrt', 'bad', 'lily', 'mami', 'mami', 'love', 'could', 'tell', 'love', 'even', 'mean', 'mmmm', 'well', 'make', 'believe', 'mmmm', 'love', 'mmmm', 'love', 'call', 'papi', 'mmmm', 'even', 'though', 'korean', 'mmmm', 'get', 'wet', 'like', 'tsunami', 'nami', 'ooh', 'yeahyeah', 'know', 'one', 'time', 'swish', 'feel', 'like', 'go', 'go', 'night', 'fire', 'need', 'back', 'sooner', 'sooner', 'come', 'back', 'side', 'get', 'back', 'cooler', 'cooler', 'run', 'back', 'one', 'time', 'grab', 'uno', 'yeahyeah', 'uno', 'want', 'dirty', 'clean', 'wake', 'dream', 'bite', 'tongue', 'make', 'scream', 'make', 'scream', 'see', 'get', 'everything', 'need', 'nobody', 'go', 'like', 'burn', 'high', 'degree', 'burn', 'high', 'degree', 'make', 'feel', 'like', 'burn', 'hurt', 'uh', 'maybe', 'part', 'rush', 'u', 'love', 'baby', 'hurt', 'hurt', 'love', 'baby', 'hurt', 'hurt', 'love', 'love', 'uhhuh', 'might', 'also', 'like', 'walk', 'talk', 'live', 'behind', 'door', 'business', 'body', 'give', 'kiss', 'wet', 'pop', 'like', 'adderall', 'baby', 'dive', 'beach', 'go', 'swim', 'let', 'u', 'go', 'deep', 'know', 'limit', 'nothing', 'strong', 'sipping', 'still', 'go', 'finish', 'enough', 'one', 'day', 'ghost', 'ooh', 'tell', 'lie', 'kill', 'slowly', 'love', 'baby', 'hurt', 'hurt', 'ammo', 'love', 'baby', 'hurt', 'hurt', 'love', 'dada', 'dadadada', 'ooh', 'dadadada', 'dadadada', 'uhhuh', 'love', 'dada', 'dadadada', 'dadadada', 'dadadada', 'hey', 'love', 'baby', 'hurt', 'hurt', 'love', 'baby', 'hurt', 'hurt', 'love', 'hoh', 'uh', 'best', 'friend', 'whole', 'world', 'mood', 'board', 'dress', 'really', 'cute', 'clothes', 'hawaii', 'like', 'tokyo', 'devon', 'lee', 'smile', 'teeth', 'white', 'row', 'get', 'classic', 'real', 'deep', 'van', 'gogh', 'get', 'loyalty', 'say', 'love', 'girl', 'love', 'ahah', 'barbie', 'fine', 'fine', 'blow', 'mind', 'jump', 'driver', 'seat', 'put', 'speed', 'drive', 'hot', 'rid', 'street', 'different', 'frequency', 'know', 'know', 'mean', 'running', 'red', 'light', 'ah', 'barbie', 'fine', 'fine', 'blow', 'mind', 'jump', 'driver', 'seat', 'put', 'speed', 'drive', 'hot', 'rid', 'street', 'different', 'frequency', 'know', 'know', 'mean', 'running', 'red', 'light', 'liii', 'iii', 'iii', 'light', 'red', 'light', 'red', 'light', 'red', 'light', 'red', 'light', 'might', 'also', 'like', 'get', 'top', 'tire', 'fire', 'fire', 'living', 'life', 'see', 'look', 'side', 'eye', 'wow', 'jealous', 'one', 'kind', 'think', 'care', 'care', 'classic', 'real', 'deep', 'voltaire', 'girl', 'need', 'know', 'well', 'already', 'know', 'ahah', 'barbie', 'fine', 'fine', 'blow', 'mind', 'jump', 'driver', 'seat', 'put', 'speed', 'drive', 'hot', 'rid', 'street', 'different', 'frequency', 'know', 'know', 'mean', 'running', 'red', 'light', 'ah', 'barbie', 'fine', 'fine', 'blow', 'mind', 'jump', 'driver', 'seat', 'put', 'speed', 'drive', 'hot', 'rid', 'street', 'different', 'frequency', 'know', 'know', 'mean', 'running', 'red', 'light', 'liii', 'iii', 'iii', 'light', 'red', 'light', 'red', 'light', 'red', 'light', 'red', 'light', 'liii', 'iii', 'iii', 'light', 'red', 'light', 'red', 'light', 'red', 'light', 'red', 'light', 'red', 'light', 'red', 'light', 'red', 'light', 'red', 'light', 'know', 'told', 'time', 'run', 'need', 'take', 'slow', 'stepping', 'tote', 'scar', 'honey', 'maybe', 'worry', 'right', 'right', 'keep', 'dream', 'alive', '1999', 'hero', 'worry', 'right', 'right', 'swim', 'flood', 'dance', 'cloud', 'worry', 'worry', 'know', 'told', 'time', 'run', 'spend', 'like', 'gold', 'living', 'like', 'ninezeros', 'get', 'regret', 'even', 'break', 'best', 'get', 'something', 'want', 'steal', 'way', 'busy', 'problem', 'problem', 'feel', 'stress', 'obsess', 'sealing', 'deal', 'take', 'let', 'go', 'see', 'onerepublic', 'liege', 'ticket', 'low', '65you', 'might', 'also', 'like', 'worry', 'right', 'right', 'keep', 'dream', 'alive', '1999', 'hero', 'worry', 'right', 'right', 'swim', 'flood', 'dance', 'cloud', 'worry', 'worried', 'ooh', 'worry', 'ooh', 'worried', 'right', 'right', 'keep', 'dream', 'alive', '1999', 'hero', 'worry', 'right', 'right', 'swim', 'flood', 'dance', 'cloud', 'worry', 'ooh', 'hey', 'worry', 'ooh', 'hey', 'worry', 'ohohoh', 'mommy', 'bamenda', 'bianca', 'ooh', 'ayo', 'mage', 'make', 'bang', 'drinking', 'alcohol', 'past', 'five', 'day', 'check', 'look', 'walked', 'room', 'eye', 'red', 'smoke', 'bang', 'check', 'check', 'notice', 'nobody', 'wey', 'know', 'paranoia', 'put', 'smile', 'face', 'facade', 'never', 'face', 'ooh', 'know', 'well', 'well', 'see', 'buried', 'inside', 'grave', 'inside', 'grave', 'see', 'people', 'people', 'people', 'people', 'really', 'know', 'really', 'know', 'see', 'people', 'people', 'people', 'really', 'know', 'really', 'know', 'might', 'also', 'like', 'drink', 'alcohol', 'past', 'five', 'day', 'check', 'look', 'walked', 'room', 'eye', 'red', 'smoke', 'bang', 'check', 'check', 'notice', 'holy', 'father', 'holy', 'father', 'dey', 'try', 'fo', 'hold', 'head', 'say', 'make', 'leave', 'dino', 'holy', 'father', 'yeahyeah', 'make', 'try', 'fo', 'understand', 'yahoo', 'girl', 'dey', 'see', 'people', 'bang', 'people', 'people', 'people', 'really', 'know', 'really', 'know', 'really', 'know', 'see', 'people', 'bang', 'people', 'people', 'really', 'know', 'ummm', 'really', 'know', 'drink', 'alcohol', 'past', 'five', 'day', 'check', 'look', 'walked', 'room', 'eye', 'red', 'smoke', 'bang', 'check', 'check', 'notice', 'drink', 'alcohol', 'past', 'five', 'day', 'check', 'look', 'walked', 'room', 'eye', 'red', 'smoke', 'bang', 'check', 'check', 'notice', 'drink', 'alcohol', 'past', 'five', 'day', 'check', 'find', 'way', 'articulate', 'feel', 'go', 'say', 'love', 'love', 'hard', 'communicate', 'thought', 'hold', 'tonight', 'go', 'let', 'know', 'let', 'tell', 'truth', 'baby', 'let', 'tell', 'truth', 'know', 'think', 'see', 'eye', 'hate', 'want', 'hate', 'cry', 'scar', 'lonely', 'especially', 'night', 'scar', 'miss', 'happens', 'every', 'time', 'want', 'feelins', 'afford', 'love', 'try', 'find', 'reason', 'pull', 'u', 'apart', 'work', 'perfect', 'know', 'worth', 'walk', 'away', 'even', 'though', 'go', 'make', 'feel', 'alone', 'know', 'would', 'die', 'baby', 'would', 'die', 'distance', 'time', 'u', 'never', 'change', 'mind', 'baby', 'would', 'die', 'baby', 'would', 'die', 'say', 'see', 'weekend', 'liege', 'ticket', 'low', '57you', 'might', 'also', 'like', 'find', 'way', 'manipulate', 'feeling', 'go', 'baby', 'girl', 'blame', 'blame', 'take', 'pain', 'forever', 'find', 'one', 'good', 'right', 'babe', 'think', 'right', 'babe', 'know', 'think', 'see', 'eye', 'hate', 'want', 'hate', 'cry', 'work', 'perfect', 'know', 'worth', 'walk', 'away', 'even', 'though', 'go', 'make', 'feel', 'alone', 'know', 'would', 'die', 'baby', 'would', 'die', 'distance', 'time', 'u', 'never', 'change', 'mind', 'baby', 'would', 'die', 'uh', 'baby', 'would', 'die', 'would', 'die', 'would', 'lie', 'keep', 'real', 'would', 'baby', 'sayind', 'would', 'die', 'would', 'lie', 'keep', 'real', 'would', 'baby', 'even', 'though', 'go', 'make', 'feel', 'alone', 'know', 'would', 'die', 'baby', 'would', 'die', 'distance', 'time', 'u', 'never', 'change', 'mind', 'baby', 'would', 'die', 'baby', 'would', 'die', 'babe', 'die', 'want', 'get', 'high', 'lover', 'veo', 'una', 'mueca', 'cuando', 'micro', 'en', 'el', 'espero', 'kiss', 'kiss', 'look', 'dolly', 'think', 'may', 'go', 'tonight', 'want', 'ride', 'get', 'high', 'moonlight', 'want', 'get', 'high', 'lover', 'veo', 'una', 'mueca', 'cuando', 'micro', 'en', 'el', 'espero', 'kiss', 'kiss', 'look', 'dolly', 'think', 'may', 'go', 'tonight', 'want', 'ride', 'get', 'high', 'moonlight', 'forget', 'small', 'talk', 'surface', 'level', 'much', 'care', 'put', 'lip', 'gloss', 'saw', 'stare', 'peripheral', 'baby', 'day', 'know', 'place', 'escape', 'find', 'feels', 'let', 'go', 'everything', 'free', 'want', 'get', 'high', 'lover', 'veo', 'una', 'mueca', 'cuando', 'micro', 'en', 'el', 'espero', 'kiss', 'kiss', 'look', 'dolly', 'think', 'may', 'go', 'tonight', 'want', 'ride', 'get', 'high', 'moonlight', 'want', 'get', 'high', 'lover', 'veo', 'una', 'mueca', 'cuando', 'micro', 'en', 'el', 'espero', 'kiss', 'kiss', 'look', 'dolly', 'think', 'may', 'go', 'tonight', 'want', 'ride', 'get', 'high', 'moonlight', 'see', 'kali', 'uchi', 'liege', 'ticket', 'low', '60you', 'might', 'also', 'like', 'nothing', 'like', 'peace', 'mind', 'take', 'time', 'make', 'sure', 'okay', 'know', 'put', 'stress', 'brain', 'still', 'love', 'put', 'one', 'always', 'go', 'way', 'show', 'priority', 'find', 'feels', 'let', 'go', 'everything', 'free', 'want', 'get', 'high', 'lover', 'veo', 'una', 'mueca', 'cuando', 'micro', 'en', 'el', 'espero', 'want', 'get', 'high', 'lover', 'kiss', 'kiss', 'look', 'dolly', 'think', 'may', 'go', 'tonight', 'want', 'ride', 'get', 'high', 'moonlight', 'want', 'get', 'high', 'lover', 'get', 'high', 'veo', 'una', 'mueca', 'cuando', 'micro', 'en', 'el', 'espero', 'high', 'lover', 'kiss', 'kiss', 'look', 'dolly', 'think', 'may', 'go', 'tonight', 'want', 'ride', 'get', 'high', 'moonlight', 'get', 'high', 'get', 'higher', 'high', 'let', 'u', 'go', 'moon', 'leave', 'behind', 'feel', 'side', 'get', 'high', 'high', 'moonlight', 'glow', 'nowhere', 'go', 'together', 'go', 'higher', 'high', 'nowhere', 'go', 'ooh', 'think', 'know', 'touch', 'fire', 'three', 'four', 'time', 'testify', 'told', 'lie', 'would', 'around', 'scar', 'long', 'judge', 'get', 'mob', 'scheme', 'loot', 'hide', 'body', 'long', 'dream', 'problem', 'get', 'nobody', 'right', 'tell', 'truth', 'look', 'good', 'lose', 'snooze', 'miss', 'moment', 'important', 'nobody', 'body', 'like', 'lose', 'snooze', 'miss', 'moment', 'important', 'nobody', 'body', 'like', 'droop', 'ride', 'feel', 'like', 'scarface', 'scarface', 'like', 'white', 'bob', 'main', 'one', 'main', 'one', 'let', 'take', 'argument', 'back', 'place', 'place', 'remind', 'nonviolent', 'day', 'one', 'day', 'one', 'yet', 'magic', 'smash', 'grab', 'nasty', 'habit', 'take', 'hold', 'home', 'hard', 'grow', 'say', 'see', 'sea', 'liege', 'ticket', 'low', '120you', 'might', 'also', 'like', 'lose', 'snooze', 'miss', 'moment', 'important', 'nobody', 'body', 'like', 'lose', 'snooze', 'miss', 'moment', 'important', 'nobody', 'body', 'like', 'main', 'one', 'rid', 'front', 'main', 'one', 'try', 'blame', 'main', 'one', 'lie', 'threaten', 'leave', 'main', 'one', 'cry', 'tryna', 'everything', 'main', 'one', 'rid', 'front', 'main', 'one', 'try', 'blame', 'main', 'one', 'lie', 'threaten', 'leave', 'main', 'one', 'cry', 'lose', 'like', 'like', 'snooze', 'miss', 'moment', 'like', 'important', 'nobody', 'body', 'like', 'lose', 'like', 'snooze', 'miss', 'moment', 'like', 'important', 'nobody', 'body', 'like', 'nah', 'nah', 'nah', 'nah', 'think', 'know', 'woah', 'see', 'lose', 'think', 'know', 'tandem', 'inconsiderate', 'fivestar', 'hotel', 'smoking', 'cigarette', 'mix', 'codeine', 'phenergan', 'get', 'thick', 'want', 'get', 'thin', 'drinking', 'apple', 'cider', 'vinegar', 'wear', 'skim', 'want', 'kim', 'uh', 'alright', 'know', 'bad', 'stop', 'act', 'innocent', 'get', 'generational', 'wealth', 'year', 'million', 'whip', 'could', 'tokyo', 'drift', 'fast', 'furious', 'go', 'tooth', 'yard', 'trust', 'chance', 'blew', 'goal', 'want', 'rich', 'let', 'u', 'take', 'look', 'diamond', 'wrong', 'life', 'squint', 'stare', 'bae', 'thick', 'thin', 'already', 'thick', 'halfway', 'hahaha', 'brown', 'bad', 'could', 'change', 'mind', 'halfway', 'one', 'hundred', 'meter', 'huh', 'put', 'nine', 'goal', 'sprinter', 'uh', 'one', 'hundred', 'eater', 'fit', 'one', 'suv', 'nah', 'ssa', 'somebody', 'rescue', 'get', 'many', 'goal', 'manymany', 'goal', 'get', 'last', 'next', 'two', 'week', 'uh', 'huh', 'alright', 'like', 'send', 'address', 'please', 'might', 'also', 'like', 'suv', 'outside', 'white', 'inside', 'brown', 'like', 'michael', 'jack', 'time', 'man', 'build', 'line', 'trap', 'spend', 'like', 'even', 'like', 'stack', 'pistol', 'come', 'irish', 'ferry', 'let', 'go', 'sound', 'like', 'tap', 'dance', 'bapa', 'way', 'ball', 'yellow', 'ref', 'jaffa', 'give', 'black', 'card', 'man', 'could', 'sell', 'show', 'year', 'cap', 'sprinter', 'two', 'goal', 'van', 'intern', 'two', 'man', 'milan', 'hear', 'one', 'ting', 'date', 'pa', 'diddy', 'need', 'twenty', 'percent', 'whatever', 'bag', 'outside', 'head', 'hand', 'tell', 'name', 'bench', 'say', 'one', 'birth', 'certificate', 'uh', 'boyfriend', 'run', 'diamond', 'test', 'legitimate', 'nah', 'turkishcypriot', 'curve', 'brazilian', 'uh', 'want', 'bro', 'want', 'affiliate', 'cheap', 'still', 'hit', 'chick', 'like', 'borrow', 'netflix', 'feminist', 'think', 'sexist', 'twist', 'word', 'think', 'dyslexic', 'give', 'space', 'intergalactic', 'give', 'instar', 'password', 'give', 'pin', 'amen', 'huh', 'alright', 'stainless', 'steel', 'platinum', 'dinner', 'table', 'get', 'manner', 'huh', 'shirt', 'tuck', 'napkin', 'still', 'load', 'caption', 'amount', 'minimal', 'fraction', 'eat', 'good', 'get', 'indigestion', 'bare', 'snow', 'hood', 'aspen', 'get', 'rid', 'pain', 'aspirin', 'dave', 'come', 'aston', 'make', 'payback', 'music', 'mmaybach', 'music', 'tryna', 'insult', 'intelligence', 'sometimes', 'may', 'act', 'never', 'go', 'unit', 'campus', 'sell', 'cocaine', 'student', 'bro', 'let', 'drumstick', 'beat', 'something', 'go', 'leak', 'play', 'exclusive', 'take', 'look', 'diamond', 'wrong', 'life', 'squint', 'stare', 'bae', 'thick', 'thin', 'already', 'thick', 'halfway', 'hahaha', 'brown', 'bad', 'could', 'change', 'mind', 'halfway', 'one', 'hundred', 'meter', 'huh', 'put', 'nine', 'goal', 'sprinter', 'uh', 'one', 'hundred', 'eater', 'fit', 'one', 'suv', 'nah', 'ssa', 'somebody', 'rescue', 'get', 'many', 'goal', 'manymany', 'goal', 'get', 'last', 'next', 'two', 'week', 'uh', 'huh', 'alright', 'like', 'send', 'address', 'please', 'fire', 'wife', 'beater', 'rock', 'wear', 'vest', 'man', 'send', 'therapy', 'get', 'cup', 'bra', 'lot', 'chest', 'jamaican', 'oracabess', 'hit', 'lick', 'go', 'cash', 'converter', 'work', 'chess', 'talk', 'less', 'love', 'chill', 'break', 'man', 'book', 'one', 'flight', 'impress', 'alright', 'g63', 'car', 'hug', 'like', 'friend', 'twist', 'turn', 'man', 'live', 'nash', 'die', 'nash', 'know', 'one', 'bad', 'bag', 'mine', 'hear', 'girl', 'gold', 'digger', 'true', 'date', 'ap', 'baby', 'blue', 'paper', 'pink', 'would', 'probably', 'hate', 'ever', 'spend', 'six', 'figure', 'star', 'bae', 'like', 'look', 'make', 'alright', 'start', 'qi', 'wait', 'line', 'weird', 'ask', 'asian', 'one', 'focused', 'asian', 'side', 'know', 'jack', 'boy', 'pray', 'get', 'clubs', 'daves', 'inside', 'good', 'feeling', 'alright', 'baby', 'best', 'night', 'life', 'wherever', 'take', 'ride', 'baby', 'know', 'good', 'feeling', 'alright', 'good', 'feeling', 'alright', 'baby', 'best', 'night', 'life', 'wherever', 'take', 'ride', 'baby', 'know', 'good', 'feeling', 'alright', 'know', 'good', 'feeling', 'alright', 'know', 'whatever', 'tonight', 'need', 'finer', 'thing', 'life', 'matter', 'get', 'good', 'time', 'need', 'sit', 'vip', 'middle', 'floor', 'get', 'lot', 'enough', 'good', 'feeling', 'alright', 'baby', 'best', 'night', 'life', 'wherever', 'take', 'ride', 'baby', 'know', 'good', 'feeling', 'alright', 'might', 'also', 'like', 'good', 'good', 'good', 'know', 'good', 'feeling', 'alright', 'let', 'get', 'let', 'go', 'na', 'care', 'care', 'na', 'come', 'let', 'know', 'let', 'know', 'put', 'hand', 'baby', 'nothing', 'go', 'stop', 'u', 'tonight', 'good', 'feeling', 'alright', 'baby', 'best', 'night', 'life', 'wherever', 'take', 'ride', 'baby', 'know', 'good', 'feeling', 'alright', 'law', 'law', 'law', 'law', 'law', '', 'romantic', 'life', '', 'lovely', 'day', 'arrow', 'sign', 'feel', 'lonely', 'lonely', '', '', 'hold', 'hold', 'cry', 'room', '', 'say', 'say', 'want', 'still', 'want', 'give', 'second', 'chance', 'cupid', '', '', 'love', 'real', 'cupid', 'dumb', '', 'every', 'day', 'fly', 'away', 'wait', 'around', 'waste', 'waste', '', '', '', '', '', 'might', 'also', 'like', 'lonely', 'lonely', '', '', 'kiss', 'kiss', 'cry', 'room', '', 'say', 'say', 'want', 'still', 'want', 'give', 'second', 'chance', 'cupid', '', '', 'love', 'real', 'cupid', 'dumb', 'lonely', 'hold', 'tightly', '', 'really', 'love', 'truly', '', 'wait', 'go', 'make', 'mine', 'love', 'light', 'show', 'love', 'right', 'joke', 'give', 'right', 'chance', 'know', 'hey', 'dddumb', 'boy', '', 'someone', 'share', 'feel', 'fool', 'fool', 'love', 'fool', 'love', 'give', 'second', 'chance', 'cupid', '', '', 'love', 'real', 'cupid', 'dumb', 'give', 'second', 'chance', 'cupid', 'hopeless', 'girl', 'seek', 'someone', 'share', 'feel', '', 'fool', 'cupid', 'dumb', 'fool', 'love', 'fool', 'loveembed', 'dance', 'dance', 'dance', 'anyway', 'give', 'peace', 'chance', 'let', 'fear', 'fall', 'away', 'got', 'eye', 'get', 'eye', 'say', 'yes', 'heaven', 'say', 'yes', 'say', 'yes', 'heaven', 'say', 'yes', 'get', 'stay', 'come', 'back', 'right', 'like', 'barge', 'sea', 'storm', 'stay', 'clear', 'get', 'mind', 'get', 'mind', 'see', 'lana', 'del', 'rey', 'liege', 'ticket', 'low', '199you', 'might', 'also', 'like', 'say', 'yes', 'heaven', 'say', 'yes', 'say', 'yes', 'heaven', 'say', 'yes', 'dance', 'dance', 'put', 'red', 'dress', 'get', 'fight', 'fight', 'matter', 'go', 'get', 'mind', 'got', 'mind', 'say', 'yes', 'heaven', 'say', 'yes', 'say', 'yes', 'heaven', 'say', 'yes', 'get', 'eye', 'get', 'eye', 'get', 'eye', 'get', 'eye', 'talk', 'addict', 'betrayal', 'relevant', 'terrify', 'look', 'dare', 'see', 'glare', 'everyone', 'burn', 'get', 'come', 'back', 'around', 'keep', 'side', 'street', 'clean', 'would', 'know', 'mean', 'karma', 'boyfriend', 'karma', 'karma', 'breeze', 'hair', 'weekend', 'karmas', 'relax', 'thought', 'envious', 'sweet', 'like', 'honey', 'karma', 'cat', 'purr', 'lap', 'love', 'flex', 'like', 'acrobat', 'karma', 'vibe', 'like', 'spiderboy', 'king', 'thief', 'weave', 'little', 'webs', 'capacity', 'penny', 'make', 'crown', 'trick', 'trick', 'twice', 'know', 'cash', 'price', 'come', 'back', 'around', 'see', 'taylor', 'swift', 'liege', 'ticket', 'low', '110you', 'might', 'also', 'like', 'keep', 'side', 'street', 'clean', 'would', 'know', 'mean', 'karma', 'boyfriend', 'karma', 'karma', 'breeze', 'hair', 'weekend', 'karmas', 'relax', 'thought', 'envious', 'sweet', 'like', 'honey', 'karma', 'cat', 'purr', 'lap', 'love', 'flex', 'like', 'acrobat', 'karma', 'vibe', 'like', 'ask', 'learn', 'year', 'ask', 'earn', 'tear', 'ask', 'many', 'fade', 'still', 'still', 'still', 'karma', 'thunder', 'rattle', 'ground', 'karma', 'scent', 'like', 'bounty', 'hunter', 'karma', 'go', 'track', 'step', 'step', 'town', 'town', 'sweet', 'like', 'justice', 'karma', 'queen', 'karma', 'take', 'friend', 'summit', 'karma', 'guy', 'screen', 'come', 'straight', 'home', 'karma', 'boyfriend', 'karma', 'boyfriend', 'karma', 'karma', 'breeze', 'hair', 'weekend', 'weekend', 'karmas', 'relax', 'thought', 'envious', 'sweet', 'like', 'honey', 'karma', 'cat', 'purr', 'lap', 'love', 'flex', 'like', 'acrobat', 'karma', 'vibe', 'like', 'karma', 'boyfriend', 'karma', 'ah', 'uhhuh', 'karma', 'relax', 'think', 'feel', 'rush', 'addict', 'touch', 'big', 'communication', 'tell', 'want', 'translate', 'vibration', 'let', 'body', 'talk', 'baby', 'love', 'want', 'show', 'scheme', 'want', 'let', 'get', 'trust', 'simulation', 'let', 'break', 'every', 'stimulation', 'promise', 'take', 'want', 'give', 'boy', 'well', 'show', 'scheme', 'get', 'heartbeat', 'race', 'body', 'blaze', 'feel', 'rush', 'addict', 'touch', 'feel', 'rush', 'good', 'good', 'feel', 'rush', 'addict', 'touch', 'feel', 'rush', 'good', 'good', 'might', 'also', 'like', 'good', 'slow', 'gravity', 'good', 'good', 'good', 'breathe', 'one', 'two', 'three', 'take', 'good', 'good', 'good', 'pas', 'boy', 'heatwave', 'recreate', 'sun', 'take', 'feel', 'boy', 'know', 'one', 'kiss', 'do', 'man', 'much', 'fun', 'pocket', 'rocket', 'gun', 'get', 'heartbeat', 'heartbeat', 'race', 'racin', 'body', 'blaze', 'feel', 'rush', 'addict', 'touch', 'feel', 'rush', 'good', 'good', 'feel', 'rush', 'addict', 'touch', 'feel', 'rush', 'good', 'good', 'good', 'slow', 'gravity', 'good', 'good', 'good', 'breathe', 'one', 'two', 'three', 'take', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'notice', 'get', 'quiet', 'one', 'else', 'around', 'awkward', 'silence', 'dare', 'look', 'way', 'need', 'reminder', 'feel', 'burn', 'pain', 'listen', 'harp', 'new', 'soulmate', 'perfect', 'blah', 'blah', 'blah', 'wish', 'wake', 'one', 'day', 'run', 'confess', 'love', 'least', 'let', 'say', 'talk', 'cupid', 'walk', 'right', 'shoot', 'arrow', 'heart', 'sound', 'like', 'loon', 'feel', 'confess', 'love', 'start', 'bibada', 'barada', 'dada', 'dada', 'bidi', 'yada', 'barbie', 'yabba', 'kabaddi', 'cabin', 'yadda', 'dada', 'see', 'laurel', 'liege', 'ticket', 'low', '89you', 'might', 'also', 'like', 'girl', 'lie', 'bed', 'star', 'blue', 'unrequited', 'terrify', 'love', 'drive', 'bit', 'insane', 'get', 'chest', 'tell', 'today', 'talk', 'cupid', 'walk', 'right', 'shoot', 'arrow', 'heart', 'sound', 'like', 'loon', 'feel', 'confess', 'love', 'start', 'confess', 'love', 'think', 'know', 'love', 'start', 'georgian', 'wrap', 'want', 'ya', 'arm', 'let', 'hold', 'ya', 'never', 'let', 'go', 'like', 'use', 'say', 'would', 'never', 'fall', 'love', 'find', 'say', 'would', 'never', 'fall', 'unless', 'fall', 'lose', 'within', 'darkness', 'find', 'find', 'georgia', 'pull', 'ask', 'love', 'fell', 'catch', 'ya', 'never', 'let', 'go', 'like', 'use', 'say', 'would', 'never', 'fall', 'love', 'find', 'say', 'would', 'never', 'fall', 'unless', 'fall', 'lose', 'within', 'darkness', 'find', 'find', 'see', 'stephen', 'sanchez', 'liege', 'ticket', 'low', '40you', 'might', 'also', 'like', 'would', 'never', 'fall', 'love', 'find', 'say', 'would', 'never', 'fall', 'unless', 'fall', 'lose', 'within', 'darkness', 'find', 'find', 'ohoh', 'ohoh', 'ooh', 'ohoh', 'laila', 'daah', 'ahah', 'ahah', 'uhhuh', 'uhhuh', 'uhhuh', 'uhhuh', 'think', 'want', 'one', 'number', 'phone', 'might', 'change', 'contact', 'leave', 'alone', 'say', 'like', 'eye', 'like', 'make', 'roll', 'treat', 'like', 'queen', 'get', 'feel', 'throw', 'help', 'get', 'close', 'baby', 'tongue', 'go', 'numb', 'sound', 'like', 'blehblee', 'want', 'one', 'else', 'baby', 'deep', 'lily', 'song', 'write', 'song', 'write', 'honest', 'look', 'get', 'think', 'nonsense', 'cartwheel', 'stomach', 'walk', 'get', 'arm', 'around', 'feel', 'good', 'jump', 'octave', 'think', 'get', 'ex', 'forgot', 'find', 'chill', 'must', 'lose', 'even', 'know', 'talk', 'nonsense', 'talk', 'talk', 'ahahah', 'might', 'also', 'like', 'talk', 'around', 'clock', 'talk', 'hope', 'nobody', 'knock', 'talk', 'opposite', 'soft', 'talk', 'wild', 'wild', 'thought', 'get', 'keep', 'get', 'young', 'energy', 'catch', 'lve', 'help', 'get', 'close', 'baby', 'tongue', 'go', 'numb', 'sound', 'like', 'blehblehblee', 'want', 'one', 'else', 'baby', 'deep', 'deep', 'lily', 'song', 'write', 'song', 'write', 'honest', 'honest', 'look', 'get', 'think', 'nonsense', 'nonsense', 'cartwheel', 'stomach', 'walk', 'walk', 'get', 'arm', 'around', 'feel', 'good', 'hit', 'octave', 'think', 'get', 'ex', 'forgot', 'find', 'chill', 'must', 'lose', 'even', 'know', 'talk', 'nonsense', 'ohoh', 'talk', 'talk', 'talk', 'talk', 'talk', 'talk', 'blahblah', 'blahblah', 'ahah', 'ahah', 'ah', 'ahah', 'even', 'know', 'anymore', 'song', 'catcher', 'chickenpox', 'bet', 'house', 'sock', 'wake', 'morning', 'thought', 'would', 'write', 'pop', 'hit', 'haha', 'quickly', 'take', 'clothes', 'pop', 'quiz', 'one', 'go', 'make', 'go', 'make', 'hold', 'place', 'go', 'different', 'high', 'touch', 'get', 'vulnerable', 'different', 'light', 'cynical', 'believe', 'miracle', 'let', 'slip', 'hand', 'could', 'take', 'chance', 'forgive', 'believe', 'miracle', 'put', 'ask', 'believe', 'believe', 'miracle', 'believe', 'miracle', 'ah', 'ah', 'ah', 'ah', 'ah', 'ah', 'might', 'also', 'like', 'hold', 'place', 'go', 'differentrent', 'high', 'touch', 'touch', 'get', 'vulnerable', 'get', 'vulnerable', 'different', 'light', 'cynical', 'believe', 'miracle', 'let', 'slip', 'hand', 'could', 'take', 'chance', 'forgive', 'believe', 'miracle', 'put', 'ask', 'believe', 'believe', 'miracle', 'believe', 'miracle', 'ah', 'ah', 'ah', 'ah', 'ah', 'ah', 'believe', 'miracle', 'ah', 'ah', 'ah', 'ah', 'ah', 'ah', 'ah', 'ah', 'ah', 'ah', 'ah', 'ah', 'ah', 'ah', 'ah', 'ah', 'feel', 'like', 'fall', 'love', 'fall', 'love', 'mood', 'something', 'tonight', 'something', 'baby', 'need', 'drink', 'cup', 'need', 'drink', 'hey', 'pour', 'drink', 'mood', 'something', 'mood', 'something', 'want', 'go', 'miss', 'need', 'prescription', 'want', 'go', 'higher', 'sit', 'top', 'ohlala', 'want', 'go', 'nobodys', 'want', 'go', 'nobodys', 'ever', 'fun', 'like', 'woah', 'ever', 'fun', 'go', 'night', 'black', 'light', 'spaceship', 'fly', 'spaceship', 'fly', 'unapologetic', 'night', 'night', 'get', 'tonight', 'go', 'night', 'bet', 'see', 'far', 'bet', 'see', 'star', 'bet', 'elevate', 'bet', 'meet', 'feel', 'like', 'fall', 'love', 'mood', 'something', 'go', 'night', 'see', 'beyonce', 'liege', 'ticket', 'low', '57you', 'might', 'also', 'like', 'four', 'wall', 'sexy', 'love', 'turn', 'miss', 'roll', 'call', 'roll', 'show', 'show', 'show', 'show', 'pop', 'pop', 'upon', 'pop', 'mri', 'nasty', 'clean', 'go', 'nobodys', 'go', 'nobodys', 'ever', 'fun', 'like', 'ever', 'fun', 'want', 'go', 'miss', 'need', 'prescription', 'want', 'go', 'higher', 'sit', 'top', 'go', 'night', 'funk', 'funk', 'black', 'light', 'spaceship', 'fly', 'spaceship', 'fly', 'unapologetic', 'night', 'funk', 'funk', 'tonight', 'get', 'tonight', 'go', 'night', 'bet', 'see', 'far', 'bet', 'see', 'star', 'bet', 'elevate', 'bet', 'meet', 'feel', 'like', 'fall', 'love', 'mood', 'something', 'go', 'night', 'hypersonic', 'body', 'boy', 'get', 'hit', 'hydraulics', 'ride', 'get', 'act', 'hella', 'hotty', 'excite', 'exotic', 'season', 'professional', 'squeeze', 'let', 'go', 'tease', 'selfcontrol', 'get', 'time', 'today', 'get', 'time', 'today', 'get', 'time', 'get', 'time', 'today', 'get', 'time', 'wait', 'come', 'play', 'ooh', 'come', 'cuff', 'cuff', 'cuff', 'cuff', 'baby', 'bus', 'bus', 'bus', 'baby', 'baby', 'anywhere', 'anytime', 'mind', 'mind', 'mind', 'back', 'truck', 'huh', 'back', 'truck', 'bitchll', 'get', 'huh', 'put', 'cup', 'huh', 'put', 'cup', 'go', 'night', 'take', 'flight', 'woo', 'blind', 'light', 'unapologetic', 'night', 'bet', 'see', 'star', 'night', 'bet', 'go', 'far', 'night', 'bet', 'levitate', 'night', 'bet', 'meet', 'party', 'people', 'roll', 'ooh', 'huh', 'go', 'night', 'spaceship', 'fly', 'watch', 'sunrise', 'along', 'coast', 'get', 'old', 'describe', 'feeling', 'know', 'go', 'home', 'please', 'let', 'go', 'let', 'go', 'right', 'care', 'long', 'take', 'long', 'get', 'smile', 'face', 'save', 'tear', 'okay', 'know', 'oohooh', 'ooh', 'oooh', 'watch', 'sunrise', 'get', 'old', 'ooh', 'describe', 'ooh', 'wish', 'could', 'live', 'every', 'memory', 'one', 'time', 'float', 'wind', 'time', 'spent', 'wait', 'light', 'take', 'u', 'great', 'moment', 'life', 'might', 'also', 'like', 'care', 'long', 'take', 'long', 'get', 'smile', 'face', 'save', 'tear', 'okay', 'oohooh', 'ooh', 'oooh', 'describe', 'ooh', 'last', 'night', 'let', 'liquor', 'talk', 'remember', 'everything', 'say', 'say', 'tell', 'wish', 'somebody', 'never', 'meet', 'baby', 'baby', 'something', 'tell', 'yet', 'way', 'last', 'night', 'kiss', 'lip', 'make', 'grip', 'sheet', 'fingertips', 'last', 'bottle', 'jack', 'split', 'fifth', 'talk', 'life', 'go', 'sip', 'sip', 'know', 'love', 'fight', 'say', 'mean', 'still', 'go', 'wake', 'wanting', 'know', 'last', 'night', 'let', 'liquor', 'talk', 'remember', 'everything', 'say', 'say', 'tell', 'wish', 'somebody', 'never', 'meet', 'baby', 'baby', 'something', 'tell', 'yet', 'way', 'last', 'night', 'last', 'night', 'way', 'last', 'night', 'last', 'night', 'way', 'last', 'night', 'break', 'see', 'tail', 'light', 'dust', 'call', 'mama', 'call', 'bluff', 'middle', 'night', 'pull', 'right', 'back', 'friend', 'say', 'let', 'get', 'friend', 'say', 'would', 'trade', 'kind', 'love', 'nothing', 'else', 'see', 'morgan', 'fall', 'liege', 'ticket', 'low', '20you', 'might', 'also', 'like', 'baby', 'last', 'night', 'let', 'liquor', 'talk', 'remember', 'everything', 'say', 'say', 'tell', 'wish', 'somebody', 'never', 'meet', 'baby', 'baby', 'something', 'tell', 'yet', 'way', 'last', 'night', 'say', 'would', 'enough', 'remember', 'everything', 'say', 'say', 'much', 'know', 'pack', 'slammed', 'door', 'right', 'leave', 'baby', 'baby', 'something', 'tell', 'yet', 'way', 'last', 'night', 'last', 'night', 'way', 'last', 'night', 'last', 'night', 'know', 'say', 'time', 'really', 'come', 'back', 'baby', 'baby', 'something', 'tell', 'yet', 'way', 'last', 'night', 'last', 'night', 'way', 'last', 'night', 'last', 'night', 'remember', 'promise', 'forget', 'rain', 'call', 'medicine', 'drown', 'perspective', 'take', 'fault', 'honest', 'still', 'half', 'man', 'use', 'doubt', 'forget', 'whatever', 'anyways', 'proud', 'punch', 'throw', 'name', 'someone', 'longer', 'know', 'shame', 'young', 'alone', 'traffic', 'light', 'transmitter', 'radio', 'like', 'threw', 'car', 'give', 'name', 'emergency', 'phone', 'call', 'honey', 'rang', 'ring', 'even', 'cop', 'think', 'wrong', 'hang', 'dial', 'die', 'die', 'untetherin', 'part', 'would', 'recognize', 'charm', 'alarm', 'second', 'bedridden', 'let', 'pain', 'metastasized', 'morning', 'forget', 'dial', 'tone', 'see', 'noah', 'khan', 'liege', 'ticket', 'low', '33you', 'might', 'also', 'like', 'proud', 'punch', 'throw', 'name', 'someone', 'longer', 'know', 'shame', 'young', 'alone', 'traffic', 'light', 'transmitter', 'radio', 'like', 'threw', 'car', 'give', 'name', 'emergency', 'phone', 'call', 'honey', 'rang', 'ring', 'even', 'cop', 'think', 'wrong', 'hang', 'dial', 'die', 'would', 'die', 'well', 'would', 'die', 'beg', 'sir', 'let', 'call', 'give', 'blood', 'alcohol', 'rot', 'burnouts', 'cell', 'change', 'faith', 'praise', 'flag', 'let', 'u', 'wait', 'swear', 'call', 'back', 'son', 'danger', 'sir', 'let', 'call', 'give', 'blood', 'alcohol', 'rot', 'burnouts', 'cell', 'change', 'faith', 'kiss', 'badge', 'let', 'u', 'wait', 'swear', 'call', 'back', 'son', 'say', 'proud', 'punch', 'throw', 'name', 'someone', 'longer', 'know', 'longer', 'know', 'shame', 'young', 'alone', 'traffic', 'light', 'transmitter', 'radio', 'like', 'threw', 'car', 'give', 'name', 'emergency', 'phone', 'call', 'honey', 'rang', 'ring', 'even', 'cop', 'think', 'wrong', 'hang', 'dial', 'die', 'would', 'die', 'youembed']"
  },
  {
    "objectID": "index.html#sentiment-analysis",
    "href": "index.html#sentiment-analysis",
    "title": "Natural Language Processing Song Lyrics",
    "section": "Sentiment Analysis",
    "text": "Sentiment Analysis\nSubsequently, the process involves the implementation of pipeline classes to carry out predictions using models accessible in the Hub. The code imports and employs multiple transformer models specifically designed for text classification and sentiment analysis. Specifically, the following procedure creates three distinct pipelines, each equipped with different models that facilitate the assessment of emotions and sentiment in textual content.\n\nimport transformers\nfrom transformers import pipeline\n# import tensorflow as tf\n# python -m pip install \"tensorflow&lt;2.11\"\n# python -m pip install \"protobuf&lt;3.2\"\n\nclassifier1 = pipeline(\"text-classification\",model='bhadresh-savani/distilbert-base-uncased-emotion', return_all_scores=True)\nclassifier2 = pipeline(\"text-classification\",model='cardiffnlp/twitter-roberta-base-sentiment', return_all_scores=True)\nclassifier3 = pipeline(\"sentiment-analysis\", return_all_scores=True)\n\nThe get_lyric_sentiment function takes in pre-processed lyrics as input and produces a dictionary of sentiment scores. It leverages three distinct classifiers to calculate the scores and aggregates them into a final result. For instance, one of these classifiers is the distilbert-base-uncased-emotion model, specifically trained to detect “emotions in texts such as sadness, joy, love, anger, fear, and surprise”.\n\ndef get_lyric_sentiment(cleaned_lyrics):\n    x = ' '.join(cleaned_lyrics)\n    prediction1 = classifier1(x, truncation = True)\n    song_score = {i['label']: i['score'] for i in prediction1[0]}\n    \n    prediction2 = classifier2(x, truncation=True, max_length=512)\n    for j in prediction2[0]:\n        song_score[j['label']] = j['score']\n\n    prediction3 = classifier3(x, truncation=True)\n    for k in prediction3[0]:\n        song_score[k['label']] = k['score']\n\n    return song_score\n\nIf the lyric sequence contains more than 512 tokens, it will trigger an error message indicating an exception encountered in the ‘embeddings’ layer. However, we have implemented measures to properly manage lyric sequences that exceed 512 words in the function mentioned above."
  },
  {
    "objectID": "index.html#putting-it-all-together",
    "href": "index.html#putting-it-all-together",
    "title": "Natural Language Processing Song Lyrics",
    "section": "Putting it All Together",
    "text": "Putting it All Together\nTo summarize, the code efficiently collects data and performs text analysis on every song in a playlist. Specifically, it systematically processes a list of tracks and corresponding artists while simultaneously conducting a thorough cleaning procedure on the lyrics. The cleaning process involves removing all nonessential characters, resulting in a more precise depiction of the song’s content. The outcome is a comprehensive frequency analysis of each word in a song’s lyrics, providing deeper insights into the overall conveyed message.\nAdditionally, the program computes a sentiment score for each song based on the lyrics, indicating whether the lyrics are positive, negative, or neutral. It also collects information about the song and artist, such as the release date, length, popularity, and genre. Finally, the program compiles all this information into a dataframe for further analysis.\nAfter extracting the data, it is organized and presented in a Pandas DataFrame for easy viewing.\n\nlyrics_dict = {}\ndict_ls = []\n\nfor i in range(len(df)):\n    song_name = df['name'][i].partition(' (')[0]\n    artist_name = df['artist'][i]\n    track_lyrics = clean_song_lyrics(song_name, artist_name)\n    track_lyrics = remove_stopwords_lyrics(track_lyrics)\n    \n    for k in (track_lyrics):\n        if k in lyrics_dict:\n            lyrics_dict[k] += 1\n        else:\n            lyrics_dict[k] = 1\n            \n    sent_score = get_lyric_sentiment(track_lyrics)\n    sent_score['track_name'] = song_name\n    sent_score['artist_name'] = artist_name\n    sent_score['release_date'] = df['release_date'][i]\n    sent_score['length'] = df['length'][i]\n    sent_score['popularity'] = df['popularity'][i]\n    sent_score['artist_pop'] = df['artist_pop'][i]\n    sent_score['artist_genres'] = df['artist_genres'][i]\n    sent_score['acousticness'] = df['acousticness'][i]\n    sent_score['danceability'] = df['danceability'][i]\n    sent_score['energy'] = df['energy'][i]\n    sent_score['instrumentalness'] = df['instrumentalness'][i]\n    sent_score['liveness'] = df['liveness'][i]\n    sent_score['loudness'] = df['loudness'][i]\n    sent_score['speechiness'] = df['speechiness'][i]\n    sent_score['tempo'] = df['tempo'][i]\n    sent_score['valence'] = df['valence'][i]\n    \n    dict_ls.append(sent_score)\n\n\n\n\n\n\n\n\n\n\ntrack_name\nartist_name\nrelease_date\nlength\npopularity\nartist_pop\nartist_genres\nacousticness\ndanceability\nenergy\n...\njoy\nlove\nanger\nfear\nsurprise\nLABEL_0\nLABEL_1\nLABEL_2\nNEGATIVE\nPOSITIVE\n\n\n\n\n0\n(It Goes Like) Nanana - Edit\nPeggy Gou\n2023-06-15\n231545\n93\n73\n[electra, float house]\n0.120\n0.671\n0.876\n...\n0.015183\n0.000968\n0.003207\n0.003389\n0.000714\n0.169231\n0.776154\n0.054616\n0.993093\n0.006907\n\n\n1\nBarbie World\nNicki Minaj\n2023-06-23\n109750\n95\n86\n[hip pop, pop, queens hip hop, rap]\n0.519\n0.770\n0.580\n...\n0.251172\n0.007338\n0.542800\n0.078930\n0.005181\n0.306202\n0.642930\n0.050868\n0.997746\n0.002254\n\n\n2\nPaint The Town Red\nDoja Cat\n2023-08-04\n231750\n91\n84\n[dance pop, pop]\n0.269\n0.868\n0.538\n...\n0.990045\n0.002187\n0.001797\n0.000627\n0.001279\n0.237302\n0.653762\n0.108936\n0.996174\n0.003826\n\n\n\n\n3 rows × 27 columns\n\n\n\nIn summary, the above code aims to collect and refine song lyrics by eliminating stopwords and conducting lemmatization. Subsequently, it employs pre-trained models for sentiment analysis to determine the prevailing emotion conveyed in the lyrics, providing valuable insights into the overall tone and message of the song.\n\nVisualizing the Data\nOur next step involves visually representing the distribution of different track features, such as song popularity. To achieve this, we generate a histogram using the powerful matplotlib and seaborn libraries. The figure includes an informative title and labels. We color the histogram with \\(n\\) bins to accurately represent the popularity distribution. Finally, we present the histogram using the plt.show() function.\n\n\n\n\n\n\n\n\n\n\n\nTwitter-roBERTa-base for Sentiment Analysis\nNow, we present a graphical representation of the results obtained from the roBERTa-base model “trained on roughly 58 million tweets and fine-tuned for sentiment analysis using the TweetEval benchmark” (EMNLP 2020). According to the TweetEval reference paper and official Github repository, the resulting labels 0, 1, and 2 correspond to Negative, Neutral, and Positive, respectively.\n\nLabels: 0 -&gt; Negative; 1 -&gt; Neutral; 2 -&gt; Positive\n\n\n\n\n\n\nThis code above creates a histogram that displays the distribution of labels for a roBERTa-base model. The labels are categorized as negative, neutral, or positive, with each having its own distinct color. Additionally, the code adds a title to the figure and resizes the subplots to ensure a better fit. The final output is a graph that can be saved in png format for future reference.\n\n\n\nCorrelations Matrix\nAfter completing the initial data analysis, we proceed with generating the Pearson correlations matrix using the Pandas command df.corr(). Subsequently, we visualize the matrix using the seaborn heatmap, providing a detailed understanding of the relationships between the various variables in our dataset.\n\ntrack_sentiment_df = df_final[['track_name', 'artist_name',\n           'acousticness', 'danceability', 'energy', 'instrumentalness', \n           'loudness', 'speechiness', 'tempo', 'valence', \n           'sadness', 'joy', 'love', 'anger', 'fear', 'surprise',\n           'LABEL_0', 'LABEL_1', 'LABEL_2', 'NEGATIVE', 'POSITIVE']]\n\n# Find the pearson correlations matrix\ncorr = track_sentiment_df.corr(method = 'pearson')\n\n\n\n\n\n\nThe code below produces a scatterplot that showcases the correlation between energy and fear. The x-axis represents the energy value, while the y-axis represents the fear sentiment. The size of each data point corresponds to the label indicating the neutral sentiment level, and its color represents the valence value. Moreover, each bubble contains its energy value within, allowing for a straightforward interpretation of the data.\n\n\nText(0.5, 1.0, 'Fear vs. Energy')\n\n\n\n\n\nSimilarly, the scatterplot presented above utilizes the track sentiment data, comparing the energy and fear levels of the tracks based on valence and size."
  },
  {
    "objectID": "index.html#pca-analysis",
    "href": "index.html#pca-analysis",
    "title": "Natural Language Processing Song Lyrics",
    "section": "PCA Analysis",
    "text": "PCA Analysis\nNext, we implement principal component analysis (PCA) on a comprehensive dataset comprising a range of musical features.\nFirst, we create a table from the df_final dataframe by extracting specific columns that facilitate our analysis. These columns consist of acousticness, danceability, energy, speechiness, tempo, and valence of each track, as well as emotional features such as sadness, joy, love, anger, fear, and surprise. In addition, the table includes the track name and flags for both negative and positive sentiments.\nWe then perform PCA on the data in the table and apply it to generate a biplot depicting the relationship between the features and tracks. This biplot quickly reveals any discernible patterns and clusters within the dataset.\n\nX_SMALL = df_final[['acousticness', 'danceability', 'energy', 'speechiness', \n                    'tempo', 'valence', 'sadness', 'joy', 'love', 'anger', \n                    'fear', 'surprise', 'track_name', 'NEGATIVE', 'POSITIVE']]\n\nTo process the data, the code employs the PCA and StandardScaler modules from the sklearn decomposition and preprocessing libraries. Specifically, the \\(X_i\\) variable is used to choose the first 12 columns from the subset of data mentioned above, while the track_name column is chosen as the target variable. Next, the StandardScaler standardizes the \\(X_i\\) data.\nPCA is applied to the standardized data, \\(X_{st}\\), using the PCA module, and the resulting loadings and eigenvalues are saved.\n\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import StandardScaler\nfrom bioinfokit.visuz import cluster\n\nX_i = X_SMALL.iloc[:,0:12]\ntarget = X_SMALL['track_name'].to_numpy()\nX_st =  StandardScaler().fit_transform(X_i)\npca_out = PCA().fit(X_st)\n\n# component loadings\nloadings = pca_out.components_\n\n# get eigenvalues (variance explained by each PC)  \npca_out.explained_variance_\n\narray([2.44993210e+00, 2.00586379e+00, 1.62545521e+00, 1.41945938e+00,\n       1.29500400e+00, 9.86714149e-01, 8.54648893e-01, 5.62083450e-01,\n       5.13764426e-01, 3.74437738e-01, 1.57534821e-01, 1.06126388e-14])\n\n\nNext, the following code uses the PCA() function to calculate the PCA scores of the standardized data set, \\(X_{st}\\).\nA biplot is generated using the cluster module from the bioinfokit library. The biplot is based on the PCA scores and loadings, and the column names of the \\(X_i\\) data frame are used as labels for the plot. The variance explained by the first two principal components are also displayed on the plot.\n\n\nCode\n# get biplot\npca_scores = PCA().fit_transform(X_st)\ncluster.biplot(cscore=pca_scores, loadings=loadings, labels=X_i.columns.values, \n               var1=round(pca_out.explained_variance_ratio_[0]*100, 2),\n               var2=round(pca_out.explained_variance_ratio_[1]*100, 2), #colorlist=target,\n               show=True,dim=(10,5),dotsize=16)\n\n\n\n\n\nThen, I assigned the resulting column names to the variable cols_pca using a list comprehension. Using the PCA scores, column names, and the original index from \\(X_i\\), I created a new pandas DataFrame called df_pca. The first three rows of this new DataFrame is shown below.\n\n#pca = PCA()\npca_scores = PCA().fit_transform(X_st)\ncols_pca = [f'PC{i}' for i in range(1, pca_out.n_components_+1)]\ndf_pca = pd.DataFrame(pca_scores, columns=cols_pca, index=X_i.index)\n\n\n\n\n\n\n\n\n\n\nPC1\nPC2\nPC3\nPC4\nPC5\nPC6\nPC7\nPC8\nPC9\nPC10\nPC11\nPC12\n\n\n\n\n0\n-1.696037\n2.012682\n-0.346747\n0.581137\n0.019481\n-0.517305\n-0.659773\n-1.010507\n-0.859774\n-0.830831\n0.047350\n-6.710911e-08\n\n\n1\n0.239492\n-2.221240\n0.960182\n1.669979\n1.274440\n-1.194513\n0.315276\n-1.014649\n0.596109\n-0.336843\n0.632863\n7.230154e-09\n\n\n2\n-0.628016\n-1.472723\n-2.011198\n-0.143985\n1.620391\n0.545348\n0.329770\n-0.271807\n0.868438\n-0.047258\n0.143655\n9.459873e-08\n\n\n\n\n\n\n\nThe variance ratios for the PCA output and the cumulative sum of the explained variance ratios are printed below. Specifically, the array displayed represents the amount of variability explained by each component.\n\nprint(pca_out.explained_variance_ratio_)\nprint('----')\nprint(pca_out.explained_variance_ratio_.cumsum())\n\n[2.00077788e-01 1.63812209e-01 1.32745509e-01 1.15922516e-01\n 1.05758660e-01 8.05816555e-02 6.97963263e-02 4.59034818e-02\n 4.19574281e-02 3.05790819e-02 1.28653437e-02 8.66698836e-16]\n----\n[0.20007779 0.36389    0.49663551 0.61255802 0.71831668 0.79889834\n 0.86869466 0.91459815 0.95655557 0.98713466 1.         1.        ]\n\n\nThe loading vectors help visualize the relationship between the original variables and their respective components. These vectors represent the weights of the variables within a mathematical equation used to generate the principal components.\n\ndf_weights = pd.DataFrame(pca_out.components_.T, columns=df_pca.columns, index=X_i.columns)\ndf_weights\n\n\n\n\n\n\n\n\nPC1\nPC2\nPC3\nPC4\nPC5\nPC6\nPC7\nPC8\nPC9\nPC10\nPC11\nPC12\n\n\n\n\nacousticness\n0.500030\n-0.084596\n-0.163360\n0.270448\n-0.177716\n0.044052\n-0.252778\n-0.350158\n0.188205\n0.057071\n0.619900\n-8.689746e-09\n\n\ndanceability\n-0.375051\n-0.140213\n-0.240881\n0.243561\n0.371144\n0.161730\n0.248108\n-0.285684\n0.070302\n0.636896\n0.068382\n2.450921e-08\n\n\nenergy\n-0.512299\n0.187415\n0.189290\n-0.143689\n-0.234153\n-0.043121\n0.206090\n0.067551\n-0.241475\n-0.083951\n0.690556\n-8.037493e-09\n\n\nspeechiness\n-0.152676\n-0.348034\n0.158824\n0.271103\n0.513387\n-0.136357\n-0.085688\n0.370286\n0.390224\n-0.344426\n0.243562\n-2.791231e-08\n\n\ntempo\n-0.268418\n-0.097683\n0.294100\n-0.063308\n-0.317417\n-0.565040\n-0.349210\n-0.155539\n0.380321\n0.321268\n-0.117840\n1.416773e-09\n\n\nvalence\n-0.381629\n-0.206524\n-0.312687\n0.270942\n-0.093002\n-0.099887\n-0.175265\n-0.487846\n-0.235667\n-0.518987\n-0.168225\n-2.464885e-08\n\n\nsadness\n-0.019677\n0.574964\n0.065357\n0.192931\n0.342925\n-0.133225\n-0.359329\n-0.037474\n-0.170799\n0.040270\n0.015622\n5.750036e-01\n\n\njoy\n-0.014079\n-0.375144\n-0.384662\n-0.586663\n0.021737\n-0.040859\n-0.039045\n0.039482\n0.065842\n-0.000493\n0.110312\n5.875391e-01\n\n\nlove\n-0.031740\n-0.039614\n-0.287281\n0.534846\n-0.477789\n-0.095453\n0.219246\n0.470088\n0.027763\n0.093162\n-0.081110\n3.261260e-01\n\n\nanger\n0.268670\n-0.165834\n0.397815\n0.097444\n0.074520\n-0.342894\n0.612351\n-0.341016\n-0.096755\n-0.098445\n-0.035783\n3.127856e-01\n\n\nfear\n-0.157201\n-0.125263\n0.452117\n0.081985\n-0.223934\n0.689989\n-0.092791\n-0.141514\n0.240922\n-0.067893\n-0.104814\n3.463513e-01\n\n\nsurprise\n0.085846\n-0.498659\n0.269321\n0.110920\n0.028643\n0.003488\n-0.331315\n0.177899\n-0.668719\n0.261279\n0.037608\n4.051205e-03"
  },
  {
    "objectID": "index.html#spotify-songs---similarity-search",
    "href": "index.html#spotify-songs---similarity-search",
    "title": "Natural Language Processing Song Lyrics",
    "section": "Spotify Songs - Similarity Search",
    "text": "Spotify Songs - Similarity Search\nBelow, we create a query to retrieve similar elements based on Euclidean distance. In mathematics, the Euclidean distance between two points is the length of the line segment between the two points. In this sense, the closer the distance is to 0, the more similar the songs are.\n\nKNN Algorithm\nTo obtain a string search for a song, utilize the getMusicName function shown below, which returns the artist and song name.\nThe k-Nearest Neighbors (KNN) algorithm searches for k similar elements based on a query point at the center within a predefined radius. We execute the KNN algorithm using the knnQuery function defined below, which takes a query point, a set of characteristic points, and a value for k. It computes the sum of squared differences between each data and query point, followed by the calculation of the Euclidean distance between them. The function then arranges the points by distance and returns the k closest and farthest points.\nThe querySimilars function then removes the query point and executes the KNN algorithm on the remaining points, returning the k most similar points to the query point based on the specified columns, function, and parameter.\n\n# Get a song string search\ndef getMusicName(elem):\n    return f\"{elem['artist']} - {elem['name']}\"\n\ndef knnQuery(queryPoint, arrCharactPoints, k):\n    queryVals = queryPoint.tolist()\n    distVals = []\n    \n    # Copy of dataframe indices and data\n    tmp = arrCharactPoints.copy(deep = True)  \n    for index, row in tmp.iterrows():\n        feat = row.values.tolist()\n        \n        # Calculate sum of squared differences\n        ssd = sum(abs(feat[i] - queryVals[i]) ** 2 for i in range(len(queryVals)))\n        \n        # Get euclidean distance\n        distVals.append(ssd ** 0.5)\n        \n    tmp['distance'] = distVals\n    tmp = tmp.sort_values('distance')\n    \n    # K closest and furthest points\n    return tmp.head(k).index, tmp.tail(k).index\n\n\n# Execute KNN removing the query point\ndef querySimilars(df, columns, idx, func, param):\n    arr = df[columns].copy(deep = True)\n    queryPoint = arr.loc[idx]\n    arr = arr.drop([idx])\n    return func(queryPoint, arr, param)\n\nKNN Query Example.\nWe now establish a function that creates customized query points and alters the data columns, allowing for further exploration of various options. To illustrate, the code snippet below chooses a particular group of song features and then seeks out the top k values within that feature set that are equal to one.\nTo begin, we create a scaler utilizing the preprocessing library from sklearn. It’s worth noting that all the feature values fall within the range of 0 and 1, except for loudness. As a result, we need to scale loudness to conform to the same range.\n\nfrom sklearn import preprocessing \n\nscaler = preprocessing.MinMaxScaler()\n# scale loudness to fit the same range [0, 1]\nloudness2 = df[\"loudness\"].values\nloudness_scaled=scaler.fit_transform(loudness2.reshape(-1, 1))\ndf['loudness_scaled'] = loudness_scaled\n\nLet’s search for \\(k=3\\) similar songs to a query point \\(\\textrm{songIndex} = 6\\).\n\n# Select song and column attributes\nsongIndex = 4 # query point\ncolumns = ['acousticness', 'danceability', 'energy', 'instrumentalness', 'liveness', \n           'loudness_scaled', 'tempo', \n           'speechiness', 'valence']\n\n# Set query parameters\nfunc, param = knnQuery,3\n\n# Implement query\nresponse = querySimilars(df, columns, songIndex, func, param)\n\nprint(\"---- Query Point ----\")\nprint(getMusicName(df.loc[songIndex]))\nprint('---- k = 3 similar songs ----')\nfor track_id in response[0]:\n    track_name = getMusicName(df.loc[track_id])\n    print(track_name)\nprint('---- k = 3 nonsimilar songs ----')\nfor track_id in response[1]:\n    track_name = getMusicName(df.loc[track_id])\n    print(track_name)\n\n---- Query Point ----\nOlivia Rodrigo - bad idea right?\n---- k = 3 similar songs ----\nPeggy Gou - (It Goes Like) Nanana - Edit\nGunna - fukumean\nDavid Kushner - Daylight\n---- k = 3 nonsimilar songs ----\nV - Love Me Again\nThe Weeknd - Die For You - Remix\nMorgan Wallen - Last Night\n\n\nThe code below implements the same idea as above, but queries each track in a given playlist instead of a single defined query point.\nTo keep track of the number of songs that are similar and those that are not, we use two dictionaries: similar_count” and “nonsimilar_count”. To do this, we create a loop that goes through the data, running the querySimilars function on each track. A loop then processes “similar” and “non-similar” songs from the results of the query, stored in the “response” variable. If a “similar” song is found, its name is retrieved using the getMusicName function. The song’s name is then added to the “similar_count” dictionary with a count of 1, or incremented if it already exists.\nThe same process is repeated for the “non-similar” songs, except the count is added to the “nonsimilar_count” dictionary instead.\n\nsimilar_count = {} # Similar songs count\nnonsimilar_count = {} # Non-similar songs count\n\nfor track_index in df.index:\n    # Implement query\n    response = querySimilars(df, columns, track_index, func, param)\n    \n    # Get similar songs\n    for similar_index in response[0]:\n        track = getMusicName(df.loc[similar_index])\n        if track in similar_count:\n            similar_count[track] += 1\n        else:\n            similar_count[track] = 1\n    \n    # Get non-similar songs\n    for nonsimilar_index in response[1]:\n        track = getMusicName(df.loc[nonsimilar_index])\n        if track in nonsimilar_count:\n            nonsimilar_count[track] += 1\n        else:\n            nonsimilar_count[track] = 1\n\nNext, we display both the non-similar and similar songs with their respective track name and count.\n\n\nCode\nnonsimilar = dict(sorted(nonsimilar_count.items(), key=lambda item: item[1], reverse=True))\nprint('---- NON SIMILAR SONG COUNTS ----')\nfor track_name, track_count in nonsimilar.items():\n    if track_count &gt;= 8:\n        print(track_name, ':', track_count)\n\nsimilar = dict(sorted(similar_count.items(), key=lambda item: item[1], reverse=True))\nprint('\\n---- SIMILAR SONG COUNTS ----')\nfor track_name, track_count in similar.items():\n    if track_count &gt;= 5:\n        print(track_name, ':', track_count)\n\n\n---- NON SIMILAR SONG COUNTS ----\nMorgan Wallen - Last Night : 38\nThe Weeknd - Die For You - Remix : 29\nV - Love Me Again : 28\nHarry Styles - As It Was : 22\nCharli XCX - Speed Drive (From Barbie The Album) : 21\nBillie Eilish - What Was I Made For? [From The Motion Picture \"Barbie\"] : 12\n\n---- SIMILAR SONG COUNTS ----\nOlivia Rodrigo - bad idea right? : 5\nGunna - fukumean : 5\nDavid Kushner - Daylight : 5\nLil Durk - All My Life (feat. J. Cole) : 5\nSZA - Snooze : 5\nQuevedo - Columbia : 5\nDoechii - What It Is (Solo Version) : 5\nCharli XCX - Speed Drive (From Barbie The Album) : 5\nDoja Cat - Paint The Town Red : 5\n\n\nAs shown above, the code snippet arranges the “nonsimilar_count” dictionary in a descending sequence, followed by presenting the tracks with the highest non-similar query counts. We repeat the same process for songs that are similar from the “similar_count” dictionary."
  },
  {
    "objectID": "index.html#organized-songs-in-a-playlist",
    "href": "index.html#organized-songs-in-a-playlist",
    "title": "Natural Language Processing Song Lyrics",
    "section": "Organized Songs in a Playlist",
    "text": "Organized Songs in a Playlist\nBelow, we import the Python pandas, matplotlib.pyplot, and sklearn libraries to our project. These tools help us perform various operations such as clustering, decomposition, and data visualization.\nWe then obtain a list of songs including their name and various attributes such as acousticness, danceability, energy, instrumentalness, liveness, speechiness, tempo, valence, and loudness. Next, we gather helpful insights about these songs using the’ describe’ function.\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn import cluster, decomposition\n\nsongs = df[['name','acousticness', 'danceability', 'energy', 'instrumentalness', \n            'liveness', 'speechiness', 'tempo', 'valence',  'loudness_scaled']]\nsongs.describe()\n\n\n\n\n\n\n\n\nacousticness\ndanceability\nenergy\ninstrumentalness\nliveness\nspeechiness\ntempo\nvalence\nloudness_scaled\n\n\n\n\ncount\n50.000000\n50.000000\n50.000000\n50.000000\n50.000000\n50.000000\n50.000000\n50.000000\n50.000000\n\n\nmean\n0.244202\n0.666340\n0.669182\n0.023736\n0.178292\n0.080464\n124.506220\n0.543378\n0.784907\n\n\nstd\n0.256028\n0.114361\n0.171171\n0.094858\n0.133537\n0.074471\n28.585249\n0.238465\n0.162639\n\n\nmin\n0.001260\n0.444000\n0.091100\n0.000000\n0.032200\n0.025400\n66.900000\n0.096900\n0.000000\n\n\n25%\n0.053300\n0.563500\n0.580750\n0.000000\n0.095425\n0.036300\n100.312500\n0.328500\n0.722074\n\n\n50%\n0.146500\n0.665500\n0.685000\n0.000006\n0.114000\n0.053200\n126.987000\n0.585500\n0.823084\n\n\n75%\n0.378750\n0.741500\n0.804500\n0.000162\n0.230750\n0.079600\n140.819750\n0.740250\n0.866962\n\n\nmax\n0.959000\n0.916000\n0.965000\n0.629000\n0.671000\n0.351000\n203.853000\n0.964000\n1.000000\n\n\n\n\n\n\n\nExtracting the song labels from the dataset is the first crucial step. Then, we must select the appropriate features that will serve as inputs for the Affinity Propagation clustering algorithm from the scikit-learn library. During the clustering process, a preference value of -200 is used to ensure optimal performance. Once the data is inputted, the algorithm is trained to achieve the desired outcome.\n\nlabels = songs.values[:,0]\nX = songs.values[:,1:10]\nkmeans = cluster.AffinityPropagation(preference=-200)\nkmeans.fit(X)\n\nAffinityPropagation(preference=-200)\n\n\nThe script below utilizes a dictionary called “predictions” to keep track of the outcomes of a comparison process between two lists: “kmeans.predict(X)” and “labels”. For each new value, a unique key is generated in the dictionary with the corresponding value from the “labels” list appended to the key’s list of values.\nAfter sorting all values into their designated keys, we proceed to display each key alongside its relevant values. The output displays each category and the corresponding songs it contains.\n\npredictions = {}\nfor p,n in zip(kmeans.predict(X),labels):\n    if not predictions.get(p):\n        predictions[p] = []\n        \n    predictions[p] += [n]\n\nfor p in predictions:\n    print(\"Category\",p)\n    print(\"-----\")\n    for n in predictions[p]:\n        print(n)\n    print(\"\")\n\nCategory 4\n-----\n(It Goes Like) Nanana - Edit\nSeven (feat. Latto) (Explicit Ver.)\nbad idea right?\nfukumean\nDaylight\nBoy's a Liar Pt. 2\nBaby Don't Hurt Me\nPeople\nI'm Good (Blue)\nRush\nHere With Me\n\nCategory 3\n-----\nBarbie World (with Aqua) [From Barbie The Album]\nSuper Shy\nvampire\nWHERE SHE GOES\nAll My Life (feat. J. Cole)\nI Ain't Worried\nMoonlight\nSnooze\nSprinter\nNonsense\nMiracle (with Ellie Goulding)\n\nCategory 0\n-----\nPaint The Town Red\nPopular (with Playboi Carti & Madonna) - Music from the HBO Original Series\nLALA\nKill Bill\nCreepin' (with The Weeknd & 21 Savage)\nColumbia\nFast Car\nSay Yes To Heaven\nKarma\nUntil I Found You (with Em Beihold) - Em Beihold Version\n\nCategory 2\n-----\nCruel Summer\nAs It Was\nChemical\nWhat It Is (Solo Version)\nSpeed Drive (From Barbie The Album)\n\nCategory 5\n-----\nDance The Night (From Barbie The Album)\nMELTDOWN (feat. Drake)\nCalm Down (with Selena Gomez)\nFlowers\nK-POP\nCupid - Twin Ver.\nCUFF IT\nDial Drunk (with Post Malone)\n\nCategory 1\n-----\nWhat Was I Made For? [From The Motion Picture \"Barbie\"]\nLove Me Again\nDie For You - Remix\nFrom The Start\n\nCategory 6\n-----\nLast Night\n\n\n\nThe script successfully categorized the playlist into 6 distinct groups based on shared features, resulting in a diverse selection of songs within each category.\n\n\nK Means Clustering\nUsing K Means clustering, we choose to break the playlist into 3 smaller playlists.\nAs shown below, we employ the KMeans algorithm, obtained from the sklearn.cluster library, to cluster a collection of songs into distinct categories based on track features, such as their energy levels and sound qualities. Using three clusters, we apply this algorithm on the track features from the “playlist_tracks” subset of data, dropping the “artist” and “name” columns.\n\nfrom sklearn.cluster import KMeans\nimport seaborn as sns\n%matplotlib inline\nplaylist_tracks = df[['artist','name','acousticness','danceability','energy',\n                      'liveness', 'instrumentalness','speechiness','valence']]\n\nkmeans = KMeans(n_clusters = 3)\nkmeans.fit(playlist_tracks.drop(['artist', 'name'], axis = 1))\n\nKMeans(n_clusters=3)\n\n\nAdditionally, we import the “seaborn” library and use the “%matplotlib inline” command to generate useful plots displayed inline. Below, we generate a count plot with x-axis values set to a list of groups, displayed as string representations, produced by the k-means clustering algorithm.\n\nsns.countplot(x=[str(group) for group in kmeans.labels_], color = 'lightblue')\n\n&lt;AxesSubplot:ylabel='count'&gt;\n\n\n\n\n\n\n\nVisualizing the Clusters\nMoving forward, let’s look at differences in the audio features of each group.\n\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(playlist_tracks.drop(['artist', 'name'], axis = 1))\nscaled_data = scaler.transform(playlist_tracks.drop(['artist', 'name'], axis = 1))\n\n\n\nCode\nfrom sklearn.decomposition import PCA\npca = PCA(n_components =2)\npca.fit(scaled_data)\ndata_pca = pca.transform(scaled_data)\n\nplt.scatter(data_pca[:,0], data_pca[:,1], c = list(kmeans.labels_), cmap = 'Paired')\nplt.xlabel('PC1: {:.3f}'.format(pca.explained_variance_ratio_[0]), size = 15)\nplt.ylabel('PC2: {:.3f}'.format(pca.explained_variance_ratio_[1]), size = 15)\n\n\nText(0, 0.5, 'PC2: 0.207')\n\n\n\n\n\n\n\nText(0, 0.5, 'PC2: 0.207')\n\n\n\n\n\n\nplaylist_tracks['group'] = list(kmeans.labels_)\nplaylist_tracks = playlist_tracks.astype({'group': str})\n\nmeans = pd.DataFrame(index = range(0,3), \n                    columns = list(playlist_tracks[playlist_tracks['group'] == '0'].describe().loc['mean'].index))\nmeans.iloc[0] = playlist_tracks[playlist_tracks['group'] == '0'].describe().loc['mean']\nmeans.iloc[1] = playlist_tracks[playlist_tracks['group'] == '1'].describe().loc['mean']\nmeans.iloc[2] = playlist_tracks[playlist_tracks['group'] == '2'].describe().loc['mean']\nmeans\n\n\n\n\n\n\n\n\nacousticness\ndanceability\nenergy\nliveness\ninstrumentalness\nspeechiness\nvalence\n\n\n\n\n0\n0.117436\n0.636\n0.717412\n0.242529\n0.048109\n0.075188\n0.321935\n\n\n1\n0.180308\n0.72748\n0.7152\n0.151944\n0.011281\n0.0967\n0.73876\n\n\n2\n0.71325\n0.53975\n0.422888\n0.124125\n0.010864\n0.040938\n0.403375"
  }
]